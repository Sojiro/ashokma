{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/anodyne/source/css/style.styl","path":"css/style.styl","modified":1,"renderable":1}],"Cache":[{"_id":"themes/anodyne/.gitignore","hash":"2aa039aab52800662710bbf503671c770af96621","modified":1550933252663},{"_id":"themes/anodyne/LICENSE","hash":"283b04655955b9d7904c85b7a4f908de1f529699","modified":1550933252663},{"_id":"themes/anodyne/README.md","hash":"91e55502fdd9d96d3491c56e17ed4a5bfecec99b","modified":1550933252663},{"_id":"themes/anodyne/_config.yml","hash":"05fc346dac4db9b982d9e6a2b22e6dcd74d7024d","modified":1551473528622},{"_id":"source/About/index.md","hash":"7968e2d0fdfd8e605bbac387d94bd91b9258aeb3","modified":1551473313623},{"_id":"source/_posts/Address-in-use-kill-process-at-a-specific-port-2019-02-24.md","hash":"7de6b77062b68a2bb5eee91c5ee01c7a433cac3b","modified":1552843643787},{"_id":"source/_posts/Linux-How-to-see-the-installed-OS-version-from-terminal-2019-03-17.md","hash":"d326506b9c648dcd0ce30580c1cd8c8ad4182eea","modified":1552838661912},{"_id":"source/_posts/Linux-how-to-exclude-specific-folder-during-copy-in-terminal-2019-03-17.md","hash":"c78428158d3d84f3e8ca51efe3ef8207b2d6ae60","modified":1552844040437},{"_id":"source/_posts/My-new-laptop-System76-Galago-Pro-2019-02-22.md","hash":"4b29b729422c4281aa6e177eb891f0c85ea09003","modified":1552835343511},{"_id":"source/_posts/Run-Postgres-as-Docker-container-2019-03-17.md","hash":"16e5d272cfe54720ffc1a45326e7d34138b4ef73","modified":1552843387735},{"_id":"source/_posts/hexo-fatal-in-unpopulated-submodule-deploy-git-2019-02-18.md","hash":"106e5019d1c70504bafda5d3032bdde075ca76d9","modified":1552835368495},{"_id":"source/_posts/install-nodejs-and-npm-pop-os-2019-02-18.md","hash":"687ed9f6c786e69aa2326e8400f2db344ee4a8bc","modified":1552835278682},{"_id":"source/_posts/log-2019-02-17.md","hash":"e7a8dd9315dba64241031b55cb694868610e1a86","modified":1552835343511},{"_id":"source/tags/index.md","hash":"fd78486095dc74c3989cc233712488b5058af13c","modified":1551020713338},{"_id":"themes/anodyne/languages/default.yml","hash":"ca15bcfaf72bcc03f0399adad2ccc1286b7e1f0b","modified":1550933252663},{"_id":"themes/anodyne/languages/en.yml","hash":"ca15bcfaf72bcc03f0399adad2ccc1286b7e1f0b","modified":1550933252663},{"_id":"themes/anodyne/languages/fr.yml","hash":"b436688a5a0337018527ed57910fafdc5363afed","modified":1550933252663},{"_id":"themes/anodyne/languages/ja.yml","hash":"ef896837230aadc20255ba78e950bf9654b75d91","modified":1550933252663},{"_id":"themes/anodyne/languages/nl.yml","hash":"cc155e8af2de51b4bff97400ced85028cdcbce78","modified":1550933252663},{"_id":"themes/anodyne/languages/zh-CN.yml","hash":"900ad0d674cd5692ed50e0c0215f4e40a956ecc8","modified":1550933252663},{"_id":"themes/anodyne/layout/archive.ejs","hash":"34748b8823e32107497f4e35699b69d0df102ce9","modified":1550933252667},{"_id":"themes/anodyne/layout/index.ejs","hash":"bf4f905d19dde85d69393671b30db3d97fe7aff2","modified":1550933252667},{"_id":"themes/anodyne/layout/layout.ejs","hash":"7047637446a9849592a923e23ca715033a7e6b8a","modified":1550933252667},{"_id":"themes/anodyne/layout/page.ejs","hash":"ca27a0f1bb831de802393f8b9b5fb52803c1af20","modified":1551473242042},{"_id":"themes/anodyne/layout/post.ejs","hash":"247962030ad0eaf6afe3a6ed0b2735173bbae1a1","modified":1550933252667},{"_id":"themes/anodyne/template/debug.css","hash":"07ad253d498ce573300a544913f9dc61ab0e6528","modified":1550933252667},{"_id":"themes/anodyne/template/index.html","hash":"80e2e0b6574577f3fed6d4e469a40e5da340f081","modified":1550933252691},{"_id":"themes/anodyne/template/logo.svg","hash":"96888554b49b60e3c8484e544a276a79e599c106","modified":1550933252691},{"_id":"themes/anodyne/template/post.html","hash":"5b214697a3dff6176f76986a30533c10ed86601c","modified":1550933252691},{"_id":"themes/anodyne/template/style.css","hash":"1e1c2f5129500746b02280a61b42ff2e86f6c2ef","modified":1550933252691},{"_id":"themes/anodyne/layout/_partial/after-footer.ejs","hash":"a56ee353c8adab93c6ec5fa7937b03672256b42b","modified":1550933252667},{"_id":"themes/anodyne/layout/_partial/article-archive.ejs","hash":"2f1d19a948a61784b161ae20b60d6bfe144fa355","modified":1550933252667},{"_id":"themes/anodyne/layout/_partial/article-short.ejs","hash":"67400eae31c55b3773eacffbdadf436e4591b37e","modified":1551019389921},{"_id":"themes/anodyne/layout/_partial/banner.ejs","hash":"33709aa80433c0eb9d8ad89c510760b7e85917fc","modified":1551020807782},{"_id":"themes/anodyne/layout/_partial/comments.ejs","hash":"132a80fc6bc88377c1b338f423f0716ce9186d17","modified":1550933252667},{"_id":"themes/anodyne/layout/_partial/footer.ejs","hash":"2da9db5c8115f0b42b88bd42f8c8d335a6faa8a2","modified":1551019416250},{"_id":"themes/anodyne/layout/_partial/google-analytics.ejs","hash":"4e6e8de9becea5a1636a4dcadcf7a10c06e2426e","modified":1550933252667},{"_id":"themes/anodyne/layout/_partial/head.ejs","hash":"9eb12f33770ad8e9db49cbd30abe8f4e3f301f7c","modified":1552826337220},{"_id":"themes/anodyne/layout/_partial/pagination.ejs","hash":"b7909df49fdff5943c2b93821a2ba6b4ed10de95","modified":1550933252667},{"_id":"themes/anodyne/layout/_partial/tag-category-index.ejs","hash":"39de576e2ebf41f53c9b1e94f0cad981a6355d2c","modified":1550933252667},{"_id":"themes/anodyne/layout/_partial/widget-about.ejs","hash":"3aa8a1143f0e5184111f93b2c21b0c30d905771d","modified":1550933252667},{"_id":"themes/anodyne/layout/_partial/widget-categories.ejs","hash":"928234e98047366bcda7e2b9c88728b0a101f350","modified":1550933252667},{"_id":"themes/anodyne/layout/_partial/widget-recent-posts.ejs","hash":"b127b23113bcdee2d4eb030bbfa9cc6acd732c3a","modified":1550933252667},{"_id":"themes/anodyne/source/css/style.styl","hash":"6291426b2ea3546bdb02582e81a458cdfdaef3f6","modified":1552828607467},{"_id":"themes/anodyne/template/devicon/Read Me.txt","hash":"59f2046b2874381564e1bb8706b011c9705b0bd4","modified":1550933252667},{"_id":"themes/anodyne/template/devicon/style.css","hash":"aa9724750bd8819a5193e1b2a8db83c8fa6a2030","modified":1550933252691},{"_id":"themes/anodyne/layout/_partial/googleadds/headeradd.ejs","hash":"14b5ef2d2dbd5df10675d3fbab07a18d13378afd","modified":1551021317115},{"_id":"themes/anodyne/source/css/partial/_base.styl","hash":"edb253386cc6c7fe5f48980f989ec8771abe99fa","modified":1550933252667},{"_id":"themes/anodyne/source/css/partial/_content.styl","hash":"5f5b925a52f514c18263a2283c51b9296f32a376","modified":1550933252667},{"_id":"themes/anodyne/source/css/partial/_highlight.styl","hash":"c3fa7da7b998c5fb2bf5b43b0bcc51cf4c98123f","modified":1550933252667},{"_id":"themes/anodyne/template/devicon/demo-files/demo.js","hash":"3325132f9aaedbddaeb5eab2b9c0f9ce698b8d93","modified":1550933252667},{"_id":"themes/anodyne/template/devicon/demo-files/demo.css","hash":"788bea3952f64bf51bd1df2d4af8bc7f6e80e798","modified":1550933252667},{"_id":"themes/anodyne/template/devicon/demo.html","hash":"2f7f175395db74edf2e127e0d10e4ab3c424fd35","modified":1550933252667},{"_id":"themes/anodyne/template/devicon/fonts/devicon.eot","hash":"72d1a173e58c7508bb1457a535b67472c6c35cec","modified":1550933252671},{"_id":"themes/anodyne/template/devicon/fonts/devicon.ttf","hash":"3eb76cd8e89f7046a735a7a8bc2de693c7314a07","modified":1550933252679},{"_id":"themes/anodyne/template/devicon/fonts/devicon.woff","hash":"69b887104812d0f246195fc3ee4abcafbbc4e961","modified":1550933252683},{"_id":"themes/anodyne/template/devicon/fonts/devicon.svg","hash":"e503ceedbdc3f353f977a3bcee6a341f94e52dab","modified":1550933252679},{"_id":"themes/anodyne/template/devicon/selection.json","hash":"3f0a9eefd7e91e00bcc01f47ad1a28282cd9bf48","modified":1550933252691},{"_id":"source/_posts/My-new-laptop-System76-Galago-Pro-2019-02-22/system_76_settings_configuration.jpg","hash":"e597d689bf5010bf910308e39211e83501e691ec","modified":1550479509000},{"_id":"source/_posts/My-new-laptop-System76-Galago-Pro-2019-02-22/system_76_unleash_your_potential.jpg","hash":"555e2298487d5938ac16d7fe59e475303c48aaa0","modified":1550480411000},{"_id":"source/_posts/My-new-laptop-System76-Galago-Pro-2019-02-22/system_76_installation.jpg","hash":"776afc74f838df0932685071c28050007d4f063a","modified":1550479487000},{"_id":"source/_posts/My-new-laptop-System76-Galago-Pro-2019-02-22/system_76_first_look.jpg","hash":"dd64529e66317da803613b893eda9e0651ade7c7","modified":1550479117000},{"_id":"source/_posts/My-new-laptop-System76-Galago-Pro-2019-02-22/system_76_reusable_package.jpg","hash":"c64d0e05d1db589664ed18c4e872f9af5d910551","modified":1550874448252},{"_id":"source/_posts/My-new-laptop-System76-Galago-Pro-2019-02-22/system_76_gift_card.jpg","hash":"c758842115ff0ac6a5dbd37e82abd1ca8ddf40de","modified":1550874448252},{"_id":"public/About/index.html","hash":"4d8a7bd9a1ccf1756bd165b3237f543cd36a6448","modified":1552844056422},{"_id":"public/tags/index.html","hash":"f3dbec01e6537fde2849507b120bbe20c9594475","modified":1552844056422},{"_id":"public/2019/03/17/Linux-how-to-exclude-specific-folder-during-copy-in-terminal/index.html","hash":"887f5bf51afce41fbfd9eae4a902309b4394dad2","modified":1552844056423},{"_id":"public/2019/03/17/Linux-How-to-see-the-installed-OS-version-from-terminal/index.html","hash":"422e60ed133acde208bacce6ccbb12caf5dfe39d","modified":1552844056423},{"_id":"public/2019/02/24/Address-in-use-kill-process-at-a-specific-port/index.html","hash":"b39b1df8cdf170b32b9af686de68e1ab82ac8229","modified":1552844056423},{"_id":"public/2019/02/20/My-new-laptop-System76-Galago-Pro/index.html","hash":"29107487459b5e9152b5843bafe2d24686a2a61c","modified":1552844056423},{"_id":"public/2019/02/18/hexo-fatal-in-unpopulated-submodule-deploy-git/index.html","hash":"7646684ad28e7004c813838d4250557280b9b411","modified":1552844056423},{"_id":"public/2019/02/18/install-nodejs-and-npm-pop-os/index.html","hash":"936fec97910458e625836c3aeead1f04bff6f5da","modified":1552844056423},{"_id":"public/2019/02/17/log/index.html","hash":"836bc1f68de2ec3385a901d49574e49e3c77b98c","modified":1552844056423},{"_id":"public/tags/Blog/index.html","hash":"ab3e892d8c8884b28f050e5c72b76ddbfbd49f30","modified":1552844056424},{"_id":"public/tags/Linux/index.html","hash":"0a83cec847d933caa250a9b869941eaad9316489","modified":1552844056424},{"_id":"public/tags/Pop-OS/index.html","hash":"8dfb128f2e6501d51cb4a0a95fade14e906a31d1","modified":1552844056424},{"_id":"public/tags/Terminal-Usage/index.html","hash":"b2b31af9c5b96adb48a75cf1fc3efaf06ee61f0a","modified":1552844056424},{"_id":"public/tags/Tutorial/index.html","hash":"d168279d5444f8e03ae57d4791300846d98084f2","modified":1552844056424},{"_id":"public/tags/Setup/index.html","hash":"12b6ede84f9e86feffd84d33d368b07eefe77731","modified":1552844056424},{"_id":"public/tags/Docker/index.html","hash":"26860927796b3ea6f7d5c01b92d0811a74567f9d","modified":1552844056424},{"_id":"public/tags/Postgres/index.html","hash":"1c17c67358ca038af1a4bc8293f3953a38541433","modified":1552844056424},{"_id":"public/tags/Hexo/index.html","hash":"ec1e68c2429c1a7a789a41b0dc79050a9e30ba69","modified":1552844056425},{"_id":"public/tags/nodejs/index.html","hash":"b00991106dd174ec363e97c98e220bf58bf99ece","modified":1552844056425},{"_id":"public/tags/npm/index.html","hash":"31f07fc29e71ca2ad3d7911c856438824baff809","modified":1552844056425},{"_id":"public/tags/Journal/index.html","hash":"ab44344c1c906af97e6faa54b0f770dc47fd7170","modified":1552844056425},{"_id":"public/tags/Shukuchi/index.html","hash":"c29f46201cf294dfd5e26f87aa51ff32fa19a6bd","modified":1552844056425},{"_id":"public/archives/index.html","hash":"4e604e0f2de9263cde61da2eae6cf5f69d2d0c20","modified":1552844056427},{"_id":"public/archives/2019/index.html","hash":"54f35f27d994b9c8f034bbe59cf6bf1012709ffe","modified":1552844056427},{"_id":"public/archives/2019/02/index.html","hash":"6e1dace52c5186ff86a88b1eac767474c2cd880b","modified":1552844056427},{"_id":"public/archives/2019/03/index.html","hash":"4d313260e75849b02ee35c2f33fab17d9df06f46","modified":1552844056427},{"_id":"public/index.html","hash":"4bc6e612379aab7596029d5370ed6e09b4f4ac9e","modified":1552844056427},{"_id":"public/2019/03/17/Run-Postgres-as-Docker-container/index.html","hash":"429b2cd4ed08bb0886f81f96f5b26c5df9e7c491","modified":1552844056427},{"_id":"public/css/style.css","hash":"5d82ba5228e332074482fd4610cd824cd746df3b","modified":1552844056554},{"_id":"public/2019/02/20/My-new-laptop-System76-Galago-Pro/system_76_settings_configuration.jpg","hash":"e597d689bf5010bf910308e39211e83501e691ec","modified":1552844056595},{"_id":"public/2019/02/20/My-new-laptop-System76-Galago-Pro/system_76_unleash_your_potential.jpg","hash":"555e2298487d5938ac16d7fe59e475303c48aaa0","modified":1552844056608},{"_id":"public/2019/02/20/My-new-laptop-System76-Galago-Pro/system_76_installation.jpg","hash":"776afc74f838df0932685071c28050007d4f063a","modified":1552844056608},{"_id":"public/2019/02/20/My-new-laptop-System76-Galago-Pro/system_76_first_look.jpg","hash":"dd64529e66317da803613b893eda9e0651ade7c7","modified":1552844056612},{"_id":"public/2019/02/20/My-new-laptop-System76-Galago-Pro/system_76_reusable_package.jpg","hash":"c64d0e05d1db589664ed18c4e872f9af5d910551","modified":1552844056615},{"_id":"public/2019/02/20/My-new-laptop-System76-Galago-Pro/system_76_gift_card.jpg","hash":"c758842115ff0ac6a5dbd37e82abd1ca8ddf40de","modified":1552844056617}],"Category":[],"Data":[],"Page":[{"title":"About","type":"About","date":"2019-03-01T20:38:25.000Z","icon":"far fa-sticky-note","_content":"","source":"About/index.md","raw":"---\ntitle: About\ntype: \"About\"\ndate: 2019-03-01 21:38:25\nicon: far fa-sticky-note\n---\n","updated":"2019-03-01T20:48:33.623Z","path":"About/index.html","comments":1,"layout":"page","_id":"cjtd799va0001xvi0i4oynhew","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"All tags","type":"tags","icon":"fas fa-tags","_content":"","source":"tags/index.md","raw":"---\ntitle: All tags\ntype: \"tags\"\nicon: fas fa-tags\n---\n","date":"2019-02-24T15:05:13.338Z","updated":"2019-02-24T15:05:13.338Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cjtd799vd0003xvi08nfvbyj8","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"EADDRINUSE - kill process at a specific port","date":"2019-02-24T12:29:56.000Z","icon":"fab fa-linux","_content":"\nIt happens sometimes that an address in use is not released. For example, when we restart our IDE after an update or accidentally close the IDE without shutting down the server. In these cases, we encounter the below error:\n\n```\n    Error: listen EADDRINUSE 0.0.0.0:4000\n```\n\nsaying address already in use. In linux, there is a utility to release the port by killing the process that is using it.\n\n```\n    $ fuser -k 4000/tcp\n    4000/tcp:             9032\n```\n\nIt finds the user by the `4000` port with protocol `tcp`, kills it and outputs the `pid` (process id). If you do not supply the `-k`, it simply outputs the `pid`.\n","source":"_posts/Address-in-use-kill-process-at-a-specific-port-2019-02-24.md","raw":"---\ntitle: EADDRINUSE - kill process at a specific port\ndate: 2019-02-24 13:29:56\ntags: [Blog, Linux, Pop!_OS, Terminal Usage]\nicon: fab fa-linux\n---\n\nIt happens sometimes that an address in use is not released. For example, when we restart our IDE after an update or accidentally close the IDE without shutting down the server. In these cases, we encounter the below error:\n\n```\n    Error: listen EADDRINUSE 0.0.0.0:4000\n```\n\nsaying address already in use. In linux, there is a utility to release the port by killing the process that is using it.\n\n```\n    $ fuser -k 4000/tcp\n    4000/tcp:             9032\n```\n\nIt finds the user by the `4000` port with protocol `tcp`, kills it and outputs the `pid` (process id). If you do not supply the `-k`, it simply outputs the `pid`.\n","slug":"Address-in-use-kill-process-at-a-specific-port","published":1,"updated":"2019-03-17T17:27:23.787Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjtd799v60000xvi0hu5xk8nw","content":"<p>It happens sometimes that an address in use is not released. For example, when we restart our IDE after an update or accidentally close the IDE without shutting down the server. In these cases, we encounter the below error:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Error: listen EADDRINUSE 0.0.0.0:4000</span><br></pre></td></tr></table></figure>\n<p>saying address already in use. In linux, there is a utility to release the port by killing the process that is using it.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ fuser -k 4000/tcp</span><br><span class=\"line\">4000/tcp:             9032</span><br></pre></td></tr></table></figure>\n<p>It finds the user by the <code>4000</code> port with protocol <code>tcp</code>, kills it and outputs the <code>pid</code> (process id). If you do not supply the <code>-k</code>, it simply outputs the <code>pid</code>.</p>\n","site":{"data":{}},"excerpt":"","more":"<p>It happens sometimes that an address in use is not released. For example, when we restart our IDE after an update or accidentally close the IDE without shutting down the server. In these cases, we encounter the below error:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Error: listen EADDRINUSE 0.0.0.0:4000</span><br></pre></td></tr></table></figure>\n<p>saying address already in use. In linux, there is a utility to release the port by killing the process that is using it.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ fuser -k 4000/tcp</span><br><span class=\"line\">4000/tcp:             9032</span><br></pre></td></tr></table></figure>\n<p>It finds the user by the <code>4000</code> port with protocol <code>tcp</code>, kills it and outputs the <code>pid</code> (process id). If you do not supply the <code>-k</code>, it simply outputs the <code>pid</code>.</p>\n"},{"title":"Linux: how to exclude specific folder during copy in terminal","icon":"fab fa-linux","date":"2019-03-17T17:34:00.000Z","_content":"\n\nIt is fun and fast to work with terminals in linux. I remember staring at the unnecessary fancy GUI progress bars in Windows. Ugh! I still wonder who would want to see the information that is being displayed in the fancy GUI progress bars. With the latest ones they even added a graph progress bar (O_o o_O) WHY?!?\n\n## `rsync` command:\n\nRsync is a fast and versatile tool to copy files and folders locally, or to/from another host over any remote shell, or to/from a remote rsync daemon. Rsync has lot useful options. One of the useful option is `--exclude`. Using `exclude` option, we can exclude certain files/directories from copying as follows:\n\n```\n    $ rsync -av --progress ./ /home/ashokma/public_html/ --exclude=.*\n```\n\n## `cp` command:\n\n### Copy files\n\nBy default `cp` copies files from folder A to B.\n\n```\n    $ cp index.html /home/ashokma/public_html\n```\n\nIf we try to do the same for folders, we get the following log:\n\n```\n    $ cp . /home/ashokma/public_html\n\n    cp: omitting directory `.'\n```\n\n> Even If there are files under the current directory, those files are not copied to `public_html` folder.\n\n### Copy folders as well as files recursively\n\nIn order to copy the files and folders we need to supply recursive option as follows:\n\n```\n    $ cp -r . /home/ashokma/public_html/\n```\n\nSimple enough, is it not!\n\n### Ignore specific folders during copying\n\nWhen we supply the `-r`, `cp` command tries to copy everything recursively under that folder including the hidden folders. I get the following logs, when I try to do `cp -r` under a git repository.\n\n```\n    cp: cannot create regular file `/home/ashokma/public_html/./.git/objects/92/9323f0a105212d26776adb68dea40bd2603ac6': Permission denied\n    cp: cannot create regular file `/home/ashokma/public_html/./.git/objects/92/50cb893f62e0943e599e4384604f88ba540c0b': Permission denied\n    cp: cannot create regular file `/home/ashokma/public_html/./.git/objects/e9/c123a5ea6c5a542d0c27b40542c850bad59ee4': Permission denied\n    cp: cannot create regular file `/home/ashokma/public_html/./.git/objects/be/61ec8fb84e53ffbca728cccbf4a28d19c719d4': Permission denied\n    cp: cannot create regular file `/home/ashokma/public_html/./.git/objects/pack/pack-a1adf7cf19c0465e14013d5ebf5a69c81fbc31da.idx': Permission denied\n    cp: cannot create regular file `/home/ashokma/public_html/./.git/objects/pack/pack-a1adf7cf19c0465e14013d5ebf5a69c81fbc31da.pack': Permission denied\n    cp: cannot create regular file `/home/ashokma/public_html/./.git/objects/bc/cac8d4bfe7b7586ec50610e939264bd8931f61': Permission denied\n```\n\nI do not want these `.git/objects` which are repository specific being copied. Now, we need to write a small query command excluding the directory we want:\n\n```    \n    $ cp -r `ls --ignore=.*` /home/ashokma/public_html/\n```\n\n> `--ignore` takes [shell pattern](//www.gnu.org/software/findutils/manual/html_node/find_html/Shell-Pattern-Matching.html), so here it ignores the following folders for me: `.git`, `./`, `../`\n\n---------------------\n\n> **Tip:** Prefer `rsync` over `cp` in case you want to copy a bunch and also want to copy to remote host as I do mostly for my blog. With the help of `rsync daemon`, it only copies the files those have changes. It works as it was named, it synchronizes the files to keep them update. ^_^","source":"_posts/Linux-how-to-exclude-specific-folder-during-copy-in-terminal-2019-03-17.md","raw":"---\ntitle: 'Linux: how to exclude specific folder during copy in terminal'\ntags:\n  - Blog\n  - Linux\n  - Pop!_OS\n  - Terminal Usage\nicon: fab fa-linux\ndate: 2019-03-17 18:34:00\n---\n\n\nIt is fun and fast to work with terminals in linux. I remember staring at the unnecessary fancy GUI progress bars in Windows. Ugh! I still wonder who would want to see the information that is being displayed in the fancy GUI progress bars. With the latest ones they even added a graph progress bar (O_o o_O) WHY?!?\n\n## `rsync` command:\n\nRsync is a fast and versatile tool to copy files and folders locally, or to/from another host over any remote shell, or to/from a remote rsync daemon. Rsync has lot useful options. One of the useful option is `--exclude`. Using `exclude` option, we can exclude certain files/directories from copying as follows:\n\n```\n    $ rsync -av --progress ./ /home/ashokma/public_html/ --exclude=.*\n```\n\n## `cp` command:\n\n### Copy files\n\nBy default `cp` copies files from folder A to B.\n\n```\n    $ cp index.html /home/ashokma/public_html\n```\n\nIf we try to do the same for folders, we get the following log:\n\n```\n    $ cp . /home/ashokma/public_html\n\n    cp: omitting directory `.'\n```\n\n> Even If there are files under the current directory, those files are not copied to `public_html` folder.\n\n### Copy folders as well as files recursively\n\nIn order to copy the files and folders we need to supply recursive option as follows:\n\n```\n    $ cp -r . /home/ashokma/public_html/\n```\n\nSimple enough, is it not!\n\n### Ignore specific folders during copying\n\nWhen we supply the `-r`, `cp` command tries to copy everything recursively under that folder including the hidden folders. I get the following logs, when I try to do `cp -r` under a git repository.\n\n```\n    cp: cannot create regular file `/home/ashokma/public_html/./.git/objects/92/9323f0a105212d26776adb68dea40bd2603ac6': Permission denied\n    cp: cannot create regular file `/home/ashokma/public_html/./.git/objects/92/50cb893f62e0943e599e4384604f88ba540c0b': Permission denied\n    cp: cannot create regular file `/home/ashokma/public_html/./.git/objects/e9/c123a5ea6c5a542d0c27b40542c850bad59ee4': Permission denied\n    cp: cannot create regular file `/home/ashokma/public_html/./.git/objects/be/61ec8fb84e53ffbca728cccbf4a28d19c719d4': Permission denied\n    cp: cannot create regular file `/home/ashokma/public_html/./.git/objects/pack/pack-a1adf7cf19c0465e14013d5ebf5a69c81fbc31da.idx': Permission denied\n    cp: cannot create regular file `/home/ashokma/public_html/./.git/objects/pack/pack-a1adf7cf19c0465e14013d5ebf5a69c81fbc31da.pack': Permission denied\n    cp: cannot create regular file `/home/ashokma/public_html/./.git/objects/bc/cac8d4bfe7b7586ec50610e939264bd8931f61': Permission denied\n```\n\nI do not want these `.git/objects` which are repository specific being copied. Now, we need to write a small query command excluding the directory we want:\n\n```    \n    $ cp -r `ls --ignore=.*` /home/ashokma/public_html/\n```\n\n> `--ignore` takes [shell pattern](//www.gnu.org/software/findutils/manual/html_node/find_html/Shell-Pattern-Matching.html), so here it ignores the following folders for me: `.git`, `./`, `../`\n\n---------------------\n\n> **Tip:** Prefer `rsync` over `cp` in case you want to copy a bunch and also want to copy to remote host as I do mostly for my blog. With the help of `rsync daemon`, it only copies the files those have changes. It works as it was named, it synchronizes the files to keep them update. ^_^","slug":"Linux-how-to-exclude-specific-folder-during-copy-in-terminal","published":1,"updated":"2019-03-17T17:34:00.437Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjtd799vb0002xvi0fpt8hhui","content":"<p>It is fun and fast to work with terminals in linux. I remember staring at the unnecessary fancy GUI progress bars in Windows. Ugh! I still wonder who would want to see the information that is being displayed in the fancy GUI progress bars. With the latest ones they even added a graph progress bar (O_o o_O) WHY?!?</p>\n<h2 id=\"rsync-command\"><a href=\"#rsync-command\" class=\"headerlink\" title=\"rsync command:\"></a><code>rsync</code> command:</h2><p>Rsync is a fast and versatile tool to copy files and folders locally, or to/from another host over any remote shell, or to/from a remote rsync daemon. Rsync has lot useful options. One of the useful option is <code>--exclude</code>. Using <code>exclude</code> option, we can exclude certain files/directories from copying as follows:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ rsync -av --progress ./ /home/ashokma/public_html/ --exclude=.*</span><br></pre></td></tr></table></figure>\n<h2 id=\"cp-command\"><a href=\"#cp-command\" class=\"headerlink\" title=\"cp command:\"></a><code>cp</code> command:</h2><h3 id=\"Copy-files\"><a href=\"#Copy-files\" class=\"headerlink\" title=\"Copy files\"></a>Copy files</h3><p>By default <code>cp</code> copies files from folder A to B.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cp index.html /home/ashokma/public_html</span><br></pre></td></tr></table></figure>\n<p>If we try to do the same for folders, we get the following log:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cp . /home/ashokma/public_html</span><br><span class=\"line\"></span><br><span class=\"line\">cp: omitting directory `.&apos;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>Even If there are files under the current directory, those files are not copied to <code>public_html</code> folder.</p>\n</blockquote>\n<h3 id=\"Copy-folders-as-well-as-files-recursively\"><a href=\"#Copy-folders-as-well-as-files-recursively\" class=\"headerlink\" title=\"Copy folders as well as files recursively\"></a>Copy folders as well as files recursively</h3><p>In order to copy the files and folders we need to supply recursive option as follows:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cp -r . /home/ashokma/public_html/</span><br></pre></td></tr></table></figure>\n<p>Simple enough, is it not!</p>\n<h3 id=\"Ignore-specific-folders-during-copying\"><a href=\"#Ignore-specific-folders-during-copying\" class=\"headerlink\" title=\"Ignore specific folders during copying\"></a>Ignore specific folders during copying</h3><p>When we supply the <code>-r</code>, <code>cp</code> command tries to copy everything recursively under that folder including the hidden folders. I get the following logs, when I try to do <code>cp -r</code> under a git repository.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cp: cannot create regular file `/home/ashokma/public_html/./.git/objects/92/9323f0a105212d26776adb68dea40bd2603ac6&apos;: Permission denied</span><br><span class=\"line\">cp: cannot create regular file `/home/ashokma/public_html/./.git/objects/92/50cb893f62e0943e599e4384604f88ba540c0b&apos;: Permission denied</span><br><span class=\"line\">cp: cannot create regular file `/home/ashokma/public_html/./.git/objects/e9/c123a5ea6c5a542d0c27b40542c850bad59ee4&apos;: Permission denied</span><br><span class=\"line\">cp: cannot create regular file `/home/ashokma/public_html/./.git/objects/be/61ec8fb84e53ffbca728cccbf4a28d19c719d4&apos;: Permission denied</span><br><span class=\"line\">cp: cannot create regular file `/home/ashokma/public_html/./.git/objects/pack/pack-a1adf7cf19c0465e14013d5ebf5a69c81fbc31da.idx&apos;: Permission denied</span><br><span class=\"line\">cp: cannot create regular file `/home/ashokma/public_html/./.git/objects/pack/pack-a1adf7cf19c0465e14013d5ebf5a69c81fbc31da.pack&apos;: Permission denied</span><br><span class=\"line\">cp: cannot create regular file `/home/ashokma/public_html/./.git/objects/bc/cac8d4bfe7b7586ec50610e939264bd8931f61&apos;: Permission denied</span><br></pre></td></tr></table></figure>\n<p>I do not want these <code>.git/objects</code> which are repository specific being copied. Now, we need to write a small query command excluding the directory we want:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cp -r `ls --ignore=.*` /home/ashokma/public_html/</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p><code>--ignore</code> takes <a href=\"//www.gnu.org/software/findutils/manual/html_node/find_html/Shell-Pattern-Matching.html\">shell pattern</a>, so here it ignores the following folders for me: <code>.git</code>, <code>./</code>, <code>../</code></p>\n</blockquote>\n<hr>\n<blockquote>\n<p><strong>Tip:</strong> Prefer <code>rsync</code> over <code>cp</code> in case you want to copy a bunch and also want to copy to remote host as I do mostly for my blog. With the help of <code>rsync daemon</code>, it only copies the files those have changes. It works as it was named, it synchronizes the files to keep them update. ^_^</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<p>It is fun and fast to work with terminals in linux. I remember staring at the unnecessary fancy GUI progress bars in Windows. Ugh! I still wonder who would want to see the information that is being displayed in the fancy GUI progress bars. With the latest ones they even added a graph progress bar (O_o o_O) WHY?!?</p>\n<h2 id=\"rsync-command\"><a href=\"#rsync-command\" class=\"headerlink\" title=\"rsync command:\"></a><code>rsync</code> command:</h2><p>Rsync is a fast and versatile tool to copy files and folders locally, or to/from another host over any remote shell, or to/from a remote rsync daemon. Rsync has lot useful options. One of the useful option is <code>--exclude</code>. Using <code>exclude</code> option, we can exclude certain files/directories from copying as follows:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ rsync -av --progress ./ /home/ashokma/public_html/ --exclude=.*</span><br></pre></td></tr></table></figure>\n<h2 id=\"cp-command\"><a href=\"#cp-command\" class=\"headerlink\" title=\"cp command:\"></a><code>cp</code> command:</h2><h3 id=\"Copy-files\"><a href=\"#Copy-files\" class=\"headerlink\" title=\"Copy files\"></a>Copy files</h3><p>By default <code>cp</code> copies files from folder A to B.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cp index.html /home/ashokma/public_html</span><br></pre></td></tr></table></figure>\n<p>If we try to do the same for folders, we get the following log:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cp . /home/ashokma/public_html</span><br><span class=\"line\"></span><br><span class=\"line\">cp: omitting directory `.&apos;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>Even If there are files under the current directory, those files are not copied to <code>public_html</code> folder.</p>\n</blockquote>\n<h3 id=\"Copy-folders-as-well-as-files-recursively\"><a href=\"#Copy-folders-as-well-as-files-recursively\" class=\"headerlink\" title=\"Copy folders as well as files recursively\"></a>Copy folders as well as files recursively</h3><p>In order to copy the files and folders we need to supply recursive option as follows:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cp -r . /home/ashokma/public_html/</span><br></pre></td></tr></table></figure>\n<p>Simple enough, is it not!</p>\n<h3 id=\"Ignore-specific-folders-during-copying\"><a href=\"#Ignore-specific-folders-during-copying\" class=\"headerlink\" title=\"Ignore specific folders during copying\"></a>Ignore specific folders during copying</h3><p>When we supply the <code>-r</code>, <code>cp</code> command tries to copy everything recursively under that folder including the hidden folders. I get the following logs, when I try to do <code>cp -r</code> under a git repository.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cp: cannot create regular file `/home/ashokma/public_html/./.git/objects/92/9323f0a105212d26776adb68dea40bd2603ac6&apos;: Permission denied</span><br><span class=\"line\">cp: cannot create regular file `/home/ashokma/public_html/./.git/objects/92/50cb893f62e0943e599e4384604f88ba540c0b&apos;: Permission denied</span><br><span class=\"line\">cp: cannot create regular file `/home/ashokma/public_html/./.git/objects/e9/c123a5ea6c5a542d0c27b40542c850bad59ee4&apos;: Permission denied</span><br><span class=\"line\">cp: cannot create regular file `/home/ashokma/public_html/./.git/objects/be/61ec8fb84e53ffbca728cccbf4a28d19c719d4&apos;: Permission denied</span><br><span class=\"line\">cp: cannot create regular file `/home/ashokma/public_html/./.git/objects/pack/pack-a1adf7cf19c0465e14013d5ebf5a69c81fbc31da.idx&apos;: Permission denied</span><br><span class=\"line\">cp: cannot create regular file `/home/ashokma/public_html/./.git/objects/pack/pack-a1adf7cf19c0465e14013d5ebf5a69c81fbc31da.pack&apos;: Permission denied</span><br><span class=\"line\">cp: cannot create regular file `/home/ashokma/public_html/./.git/objects/bc/cac8d4bfe7b7586ec50610e939264bd8931f61&apos;: Permission denied</span><br></pre></td></tr></table></figure>\n<p>I do not want these <code>.git/objects</code> which are repository specific being copied. Now, we need to write a small query command excluding the directory we want:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cp -r `ls --ignore=.*` /home/ashokma/public_html/</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p><code>--ignore</code> takes <a href=\"//www.gnu.org/software/findutils/manual/html_node/find_html/Shell-Pattern-Matching.html\">shell pattern</a>, so here it ignores the following folders for me: <code>.git</code>, <code>./</code>, <code>../</code></p>\n</blockquote>\n<hr>\n<blockquote>\n<p><strong>Tip:</strong> Prefer <code>rsync</code> over <code>cp</code> in case you want to copy a bunch and also want to copy to remote host as I do mostly for my blog. With the help of <code>rsync daemon</code>, it only copies the files those have changes. It works as it was named, it synchronizes the files to keep them update. ^_^</p>\n</blockquote>\n"},{"title":"My new laptop - System76 - Galago Pro","date":"2019-02-20T16:34:56.000Z","icon":"fas fa-laptop-code","_content":"\nFew days back I got my most awaited laptop Galago Pro from System76. To be honest, I was stalking them for long time. Whenever I think of buying my own personal machine, I go to their site and do window shopping. They have this very nice checkout option where you can select most of the configurations and extend it bit more. I often found myself over there doing the same and at the end after seeing the total price at the bottom, with a sigh, I close my browser.\n\nThis was going on for a while until I saved enough amount to go for my own developer machine. It was exciting to do the quote and order it from System76. The configuration is:\n\n```\n    Pop!_OS 18.10 (64-bit) with full-disk encryption \t\n    14″ Matte FHD 1080p Matte FHD Display \t\n    3.9 GHz i5-8265U (1.6 up to 3.90 GHz - 6MB Cache – 4 Cores – 8 Threads) \t\n    16 GB Dual Channel DDR4 at 2400MHz (2× 8 GB)\n    250 GB M.2 SSD\n    1 TB 2.5″ Solid State Hybrid Drive\n    WiFi up to 867 Mbps + Bluetooth \t\n    2 Year Limited Parts and Labor Warranty\n    3 Day Rush Assembly Service\n\n    Total : $1,480.66\n```\nIn addition, I had to pay around &euro; 290, due to Dutch customs T_T. I was expecting that anyway.\n\nYes, I opted for a 3 day rush assembly. I could not wait to get hold of it ^_^. It was here within a week and half and I could be able to track the package in UPS site from System76 package tracking section. I was informed that the package will arrive on a specific day. It was helpful for me to do work from home and inform my team accordingly.\n\n![Reusable package](system_76_reusable_package.jpg)\n\nI like the thinking of reusable package and it is the first time I am looking at one. It was compact and uptight. Next thing was the welcome card with some stickers. It is so cool! I was not expecting it in the package though.\n\n![Welcome card with some cool stickers](system_76_gift_card.jpg)\n\nI am keep the stickers away from fresh new laptop for now. I am still enjoying the original look and feel of my pretty Galago.\n\n![The First Look](system_76_first_look.jpg)\n\nWhen I unfolded the laptop, it was silver-white beauty. A look alike of macbook but a bit more smaller touchpad. The best thing about the keyboard is, it has a sepearate `Home` and `End` buttons which are in common compact laptops nowadays often integrated as part of `Fn` blue keys under `Left` and `Right` arrow keys respectively. Those two keys programmers use a lot during a code selection for refactoring or moving the cursor quickly.\n\n![The Pop!_OS installation](system_76_installation.jpg)\n\nWhen powered up, it started installing the [*POP!_OS*](//system76.com/pop) with a pretty output. Seems pretty to me! This is the first time I am installing a software without a GUI showing me unnecessary details like - *What is the writing speed? How long will it take?* ^_^\n\n![The Settings Configuration setup](system_76_settings_configuration.jpg)\n\nUpon successful installation, comes a fancy pop up which takes you through the basic configuration settings you do with most of the devices like you did for your smartphone.\n\n![Unleash Your Potential](system_76_unleash_your_potential.jpg)\n\nIt was all set and ready to go now. As it demands, it is time to \n\n> Unleash My Potential!\n---------\n***P.S:*** I will make a new post about my usage experiences of my Galago Pro soon!","source":"_posts/My-new-laptop-System76-Galago-Pro-2019-02-22.md","raw":"---\ntitle: My new laptop - System76 - Galago Pro\ndate: 2019-02-20 17:34:56\ntags: [Blog, Pop!_OS]\nicon: fas fa-laptop-code\n---\n\nFew days back I got my most awaited laptop Galago Pro from System76. To be honest, I was stalking them for long time. Whenever I think of buying my own personal machine, I go to their site and do window shopping. They have this very nice checkout option where you can select most of the configurations and extend it bit more. I often found myself over there doing the same and at the end after seeing the total price at the bottom, with a sigh, I close my browser.\n\nThis was going on for a while until I saved enough amount to go for my own developer machine. It was exciting to do the quote and order it from System76. The configuration is:\n\n```\n    Pop!_OS 18.10 (64-bit) with full-disk encryption \t\n    14″ Matte FHD 1080p Matte FHD Display \t\n    3.9 GHz i5-8265U (1.6 up to 3.90 GHz - 6MB Cache – 4 Cores – 8 Threads) \t\n    16 GB Dual Channel DDR4 at 2400MHz (2× 8 GB)\n    250 GB M.2 SSD\n    1 TB 2.5″ Solid State Hybrid Drive\n    WiFi up to 867 Mbps + Bluetooth \t\n    2 Year Limited Parts and Labor Warranty\n    3 Day Rush Assembly Service\n\n    Total : $1,480.66\n```\nIn addition, I had to pay around &euro; 290, due to Dutch customs T_T. I was expecting that anyway.\n\nYes, I opted for a 3 day rush assembly. I could not wait to get hold of it ^_^. It was here within a week and half and I could be able to track the package in UPS site from System76 package tracking section. I was informed that the package will arrive on a specific day. It was helpful for me to do work from home and inform my team accordingly.\n\n![Reusable package](system_76_reusable_package.jpg)\n\nI like the thinking of reusable package and it is the first time I am looking at one. It was compact and uptight. Next thing was the welcome card with some stickers. It is so cool! I was not expecting it in the package though.\n\n![Welcome card with some cool stickers](system_76_gift_card.jpg)\n\nI am keep the stickers away from fresh new laptop for now. I am still enjoying the original look and feel of my pretty Galago.\n\n![The First Look](system_76_first_look.jpg)\n\nWhen I unfolded the laptop, it was silver-white beauty. A look alike of macbook but a bit more smaller touchpad. The best thing about the keyboard is, it has a sepearate `Home` and `End` buttons which are in common compact laptops nowadays often integrated as part of `Fn` blue keys under `Left` and `Right` arrow keys respectively. Those two keys programmers use a lot during a code selection for refactoring or moving the cursor quickly.\n\n![The Pop!_OS installation](system_76_installation.jpg)\n\nWhen powered up, it started installing the [*POP!_OS*](//system76.com/pop) with a pretty output. Seems pretty to me! This is the first time I am installing a software without a GUI showing me unnecessary details like - *What is the writing speed? How long will it take?* ^_^\n\n![The Settings Configuration setup](system_76_settings_configuration.jpg)\n\nUpon successful installation, comes a fancy pop up which takes you through the basic configuration settings you do with most of the devices like you did for your smartphone.\n\n![Unleash Your Potential](system_76_unleash_your_potential.jpg)\n\nIt was all set and ready to go now. As it demands, it is time to \n\n> Unleash My Potential!\n---------\n***P.S:*** I will make a new post about my usage experiences of my Galago Pro soon!","slug":"My-new-laptop-System76-Galago-Pro","published":1,"updated":"2019-03-17T15:09:03.511Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjtd799vg0005xvi0wawu77e7","content":"<p>Few days back I got my most awaited laptop Galago Pro from System76. To be honest, I was stalking them for long time. Whenever I think of buying my own personal machine, I go to their site and do window shopping. They have this very nice checkout option where you can select most of the configurations and extend it bit more. I often found myself over there doing the same and at the end after seeing the total price at the bottom, with a sigh, I close my browser.</p>\n<p>This was going on for a while until I saved enough amount to go for my own developer machine. It was exciting to do the quote and order it from System76. The configuration is:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Pop!_OS 18.10 (64-bit) with full-disk encryption \t</span><br><span class=\"line\">14″ Matte FHD 1080p Matte FHD Display \t</span><br><span class=\"line\">3.9 GHz i5-8265U (1.6 up to 3.90 GHz - 6MB Cache – 4 Cores – 8 Threads) \t</span><br><span class=\"line\">16 GB Dual Channel DDR4 at 2400MHz (2× 8 GB)</span><br><span class=\"line\">250 GB M.2 SSD</span><br><span class=\"line\">1 TB 2.5″ Solid State Hybrid Drive</span><br><span class=\"line\">WiFi up to 867 Mbps + Bluetooth \t</span><br><span class=\"line\">2 Year Limited Parts and Labor Warranty</span><br><span class=\"line\">3 Day Rush Assembly Service</span><br><span class=\"line\"></span><br><span class=\"line\">Total : $1,480.66</span><br></pre></td></tr></table></figure>\n<p>In addition, I had to pay around &euro; 290, due to Dutch customs T_T. I was expecting that anyway.</p>\n<p>Yes, I opted for a 3 day rush assembly. I could not wait to get hold of it ^_^. It was here within a week and half and I could be able to track the package in UPS site from System76 package tracking section. I was informed that the package will arrive on a specific day. It was helpful for me to do work from home and inform my team accordingly.</p>\n<p><img src=\"system_76_reusable_package.jpg\" alt=\"Reusable package\"></p>\n<p>I like the thinking of reusable package and it is the first time I am looking at one. It was compact and uptight. Next thing was the welcome card with some stickers. It is so cool! I was not expecting it in the package though.</p>\n<p><img src=\"system_76_gift_card.jpg\" alt=\"Welcome card with some cool stickers\"></p>\n<p>I am keep the stickers away from fresh new laptop for now. I am still enjoying the original look and feel of my pretty Galago.</p>\n<p><img src=\"system_76_first_look.jpg\" alt=\"The First Look\"></p>\n<p>When I unfolded the laptop, it was silver-white beauty. A look alike of macbook but a bit more smaller touchpad. The best thing about the keyboard is, it has a sepearate <code>Home</code> and <code>End</code> buttons which are in common compact laptops nowadays often integrated as part of <code>Fn</code> blue keys under <code>Left</code> and <code>Right</code> arrow keys respectively. Those two keys programmers use a lot during a code selection for refactoring or moving the cursor quickly.</p>\n<p><img src=\"system_76_installation.jpg\" alt=\"The Pop!_OS installation\"></p>\n<p>When powered up, it started installing the <a href=\"//system76.com/pop\"><em>POP!_OS</em></a> with a pretty output. Seems pretty to me! This is the first time I am installing a software without a GUI showing me unnecessary details like - <em>What is the writing speed? How long will it take?</em> ^_^</p>\n<p><img src=\"system_76_settings_configuration.jpg\" alt=\"The Settings Configuration setup\"></p>\n<p>Upon successful installation, comes a fancy pop up which takes you through the basic configuration settings you do with most of the devices like you did for your smartphone.</p>\n<p><img src=\"system_76_unleash_your_potential.jpg\" alt=\"Unleash Your Potential\"></p>\n<p>It was all set and ready to go now. As it demands, it is time to </p>\n<blockquote>\n<p>Unleash My Potential!</p>\n</blockquote>\n<hr>\n<p><strong><em>P.S:</em></strong> I will make a new post about my usage experiences of my Galago Pro soon!</p>\n","site":{"data":{}},"excerpt":"","more":"<p>Few days back I got my most awaited laptop Galago Pro from System76. To be honest, I was stalking them for long time. Whenever I think of buying my own personal machine, I go to their site and do window shopping. They have this very nice checkout option where you can select most of the configurations and extend it bit more. I often found myself over there doing the same and at the end after seeing the total price at the bottom, with a sigh, I close my browser.</p>\n<p>This was going on for a while until I saved enough amount to go for my own developer machine. It was exciting to do the quote and order it from System76. The configuration is:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Pop!_OS 18.10 (64-bit) with full-disk encryption \t</span><br><span class=\"line\">14″ Matte FHD 1080p Matte FHD Display \t</span><br><span class=\"line\">3.9 GHz i5-8265U (1.6 up to 3.90 GHz - 6MB Cache – 4 Cores – 8 Threads) \t</span><br><span class=\"line\">16 GB Dual Channel DDR4 at 2400MHz (2× 8 GB)</span><br><span class=\"line\">250 GB M.2 SSD</span><br><span class=\"line\">1 TB 2.5″ Solid State Hybrid Drive</span><br><span class=\"line\">WiFi up to 867 Mbps + Bluetooth \t</span><br><span class=\"line\">2 Year Limited Parts and Labor Warranty</span><br><span class=\"line\">3 Day Rush Assembly Service</span><br><span class=\"line\"></span><br><span class=\"line\">Total : $1,480.66</span><br></pre></td></tr></table></figure>\n<p>In addition, I had to pay around &euro; 290, due to Dutch customs T_T. I was expecting that anyway.</p>\n<p>Yes, I opted for a 3 day rush assembly. I could not wait to get hold of it ^_^. It was here within a week and half and I could be able to track the package in UPS site from System76 package tracking section. I was informed that the package will arrive on a specific day. It was helpful for me to do work from home and inform my team accordingly.</p>\n<p><img src=\"system_76_reusable_package.jpg\" alt=\"Reusable package\"></p>\n<p>I like the thinking of reusable package and it is the first time I am looking at one. It was compact and uptight. Next thing was the welcome card with some stickers. It is so cool! I was not expecting it in the package though.</p>\n<p><img src=\"system_76_gift_card.jpg\" alt=\"Welcome card with some cool stickers\"></p>\n<p>I am keep the stickers away from fresh new laptop for now. I am still enjoying the original look and feel of my pretty Galago.</p>\n<p><img src=\"system_76_first_look.jpg\" alt=\"The First Look\"></p>\n<p>When I unfolded the laptop, it was silver-white beauty. A look alike of macbook but a bit more smaller touchpad. The best thing about the keyboard is, it has a sepearate <code>Home</code> and <code>End</code> buttons which are in common compact laptops nowadays often integrated as part of <code>Fn</code> blue keys under <code>Left</code> and <code>Right</code> arrow keys respectively. Those two keys programmers use a lot during a code selection for refactoring or moving the cursor quickly.</p>\n<p><img src=\"system_76_installation.jpg\" alt=\"The Pop!_OS installation\"></p>\n<p>When powered up, it started installing the <a href=\"//system76.com/pop\"><em>POP!_OS</em></a> with a pretty output. Seems pretty to me! This is the first time I am installing a software without a GUI showing me unnecessary details like - <em>What is the writing speed? How long will it take?</em> ^_^</p>\n<p><img src=\"system_76_settings_configuration.jpg\" alt=\"The Settings Configuration setup\"></p>\n<p>Upon successful installation, comes a fancy pop up which takes you through the basic configuration settings you do with most of the devices like you did for your smartphone.</p>\n<p><img src=\"system_76_unleash_your_potential.jpg\" alt=\"Unleash Your Potential\"></p>\n<p>It was all set and ready to go now. As it demands, it is time to </p>\n<blockquote>\n<p>Unleash My Potential!</p>\n</blockquote>\n<hr>\n<p><strong><em>P.S:</em></strong> I will make a new post about my usage experiences of my Galago Pro soon!</p>\n"},{"title":"Linux: How to see the installed OS version from terminal","icon":"fab fa-linux","date":"2019-03-17T15:49:11.000Z","_content":"\n\n## Just open the os-release file\n\nIt is nice to know to see the OS version installed in one's linux machine. This might come in handy to check the version installed in a running docker container or other virtual machines.\n\nTo check the OS version and configs, just run the following command:\n\n```\n    $ cat /etc/os-release\n```\n\nThis should output something like:\n\n```\n    NAME=\"Pop!_OS\"\n    VERSION=\"18.10\"\n    ID=ubuntu\n    ID_LIKE=debian\n    PRETTY_NAME=\"Pop!_OS 18.10\"\n    VERSION_ID=\"18.10\"\n    HOME_URL=\"https://system76.com/pop\"\n    SUPPORT_URL=\"http://support.system76.com\"\n    BUG_REPORT_URL=\"https://github.com/pop-os/pop/issues\"\n    PRIVACY_POLICY_URL=\"https://system76.com/privacy\"\n    VERSION_CODENAME=cosmic\n    UBUNTU_CODENAME=cosmic\n```\n\nSince I have a [System76 Galago Pro](/2019/02/20/My-new-laptop-System76-Galago-Pro/), I see the above configuration.\n\n> The information you see always depends on your machine's manufacturer. However, the properties are same across linux distributions.\n\n## Others: \n\n### 1. `lsb_release` command\n\nThe lsb_release command gives LSB (Linux Standard Base) and distribution-specific information on the CLI. The usage is:\n\n```\n    $ lsb_release -a\n```\n\noutputs something like:\n\n```\n    No LSB modules are available.\n    Distributor ID:\tUbuntu\n    Description:\tPop!_OS 18.10\n    Release:\t18.10\n    Codename:\tcosmic\n```\nAs I chose the Ubuntu flavoured [System76 Pop!_OS](//system76.com/pop), I do not have any LSB modules to be shown.\n\n### 2. `hostnamectl` command\n\nUse hostnamectl command to **query and change** the system hostname and related settings. Just type the following command to check OS name and Linux kernel version:\n\n```\n    $ hostnamectl status\n```\nor just\n\n```\n    $ hostnamectl\n```\n\noutputs something like:\n\n```\n   Static hostname: pop-os\n         Icon name: computer-laptop\n           Chassis: laptop\n        Machine ID: 828e0ab12c145d632919eeed5c6ae1a7\n           Boot ID: f4b0a67a325a4aa8b1dfceee0a4aadcc\n  Operating System: Pop!_OS 18.10\n            Kernel: Linux 4.18.0-16-generic\n      Architecture: x86-64\n\n```\n\n### 3. `uname` command\n\nJust print Linux kernel version, run:\n\n```\n    $ uname -r\n\n    4.18.0-16-generic\n```\n\nto see all available options:\n\n```\n    $ uname -a\n\n    Linux \n    pop-os \n    4.18.0-16-generic \n    #17pop0-Ubuntu \n    SMP \n    Fri Mar 8 17:52:57 UTC 2019 (last updated timestamp)\n    x86_64 x86_64 x86_64 GNU/Linux\n```","source":"_posts/Linux-How-to-see-the-installed-OS-version-from-terminal-2019-03-17.md","raw":"---\ntitle: 'Linux: How to see the installed OS version from terminal'\ntags:\n  - Blog\n  - Linux\n  - Pop!_OS\n  - Terminal Usage\nicon: fab fa-linux\ndate: 2019-03-17 16:49:11\n---\n\n\n## Just open the os-release file\n\nIt is nice to know to see the OS version installed in one's linux machine. This might come in handy to check the version installed in a running docker container or other virtual machines.\n\nTo check the OS version and configs, just run the following command:\n\n```\n    $ cat /etc/os-release\n```\n\nThis should output something like:\n\n```\n    NAME=\"Pop!_OS\"\n    VERSION=\"18.10\"\n    ID=ubuntu\n    ID_LIKE=debian\n    PRETTY_NAME=\"Pop!_OS 18.10\"\n    VERSION_ID=\"18.10\"\n    HOME_URL=\"https://system76.com/pop\"\n    SUPPORT_URL=\"http://support.system76.com\"\n    BUG_REPORT_URL=\"https://github.com/pop-os/pop/issues\"\n    PRIVACY_POLICY_URL=\"https://system76.com/privacy\"\n    VERSION_CODENAME=cosmic\n    UBUNTU_CODENAME=cosmic\n```\n\nSince I have a [System76 Galago Pro](/2019/02/20/My-new-laptop-System76-Galago-Pro/), I see the above configuration.\n\n> The information you see always depends on your machine's manufacturer. However, the properties are same across linux distributions.\n\n## Others: \n\n### 1. `lsb_release` command\n\nThe lsb_release command gives LSB (Linux Standard Base) and distribution-specific information on the CLI. The usage is:\n\n```\n    $ lsb_release -a\n```\n\noutputs something like:\n\n```\n    No LSB modules are available.\n    Distributor ID:\tUbuntu\n    Description:\tPop!_OS 18.10\n    Release:\t18.10\n    Codename:\tcosmic\n```\nAs I chose the Ubuntu flavoured [System76 Pop!_OS](//system76.com/pop), I do not have any LSB modules to be shown.\n\n### 2. `hostnamectl` command\n\nUse hostnamectl command to **query and change** the system hostname and related settings. Just type the following command to check OS name and Linux kernel version:\n\n```\n    $ hostnamectl status\n```\nor just\n\n```\n    $ hostnamectl\n```\n\noutputs something like:\n\n```\n   Static hostname: pop-os\n         Icon name: computer-laptop\n           Chassis: laptop\n        Machine ID: 828e0ab12c145d632919eeed5c6ae1a7\n           Boot ID: f4b0a67a325a4aa8b1dfceee0a4aadcc\n  Operating System: Pop!_OS 18.10\n            Kernel: Linux 4.18.0-16-generic\n      Architecture: x86-64\n\n```\n\n### 3. `uname` command\n\nJust print Linux kernel version, run:\n\n```\n    $ uname -r\n\n    4.18.0-16-generic\n```\n\nto see all available options:\n\n```\n    $ uname -a\n\n    Linux \n    pop-os \n    4.18.0-16-generic \n    #17pop0-Ubuntu \n    SMP \n    Fri Mar 8 17:52:57 UTC 2019 (last updated timestamp)\n    x86_64 x86_64 x86_64 GNU/Linux\n```","slug":"Linux-How-to-see-the-installed-OS-version-from-terminal","published":1,"updated":"2019-03-17T16:04:21.912Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjtd799vi0006xvi0bu3fuhi6","content":"<h2 id=\"Just-open-the-os-release-file\"><a href=\"#Just-open-the-os-release-file\" class=\"headerlink\" title=\"Just open the os-release file\"></a>Just open the os-release file</h2><p>It is nice to know to see the OS version installed in one’s linux machine. This might come in handy to check the version installed in a running docker container or other virtual machines.</p>\n<p>To check the OS version and configs, just run the following command:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cat /etc/os-release</span><br></pre></td></tr></table></figure>\n<p>This should output something like:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">NAME=&quot;Pop!_OS&quot;</span><br><span class=\"line\">VERSION=&quot;18.10&quot;</span><br><span class=\"line\">ID=ubuntu</span><br><span class=\"line\">ID_LIKE=debian</span><br><span class=\"line\">PRETTY_NAME=&quot;Pop!_OS 18.10&quot;</span><br><span class=\"line\">VERSION_ID=&quot;18.10&quot;</span><br><span class=\"line\">HOME_URL=&quot;https://system76.com/pop&quot;</span><br><span class=\"line\">SUPPORT_URL=&quot;http://support.system76.com&quot;</span><br><span class=\"line\">BUG_REPORT_URL=&quot;https://github.com/pop-os/pop/issues&quot;</span><br><span class=\"line\">PRIVACY_POLICY_URL=&quot;https://system76.com/privacy&quot;</span><br><span class=\"line\">VERSION_CODENAME=cosmic</span><br><span class=\"line\">UBUNTU_CODENAME=cosmic</span><br></pre></td></tr></table></figure>\n<p>Since I have a <a href=\"/2019/02/20/My-new-laptop-System76-Galago-Pro/\">System76 Galago Pro</a>, I see the above configuration.</p>\n<blockquote>\n<p>The information you see always depends on your machine’s manufacturer. However, the properties are same across linux distributions.</p>\n</blockquote>\n<h2 id=\"Others\"><a href=\"#Others\" class=\"headerlink\" title=\"Others:\"></a>Others:</h2><h3 id=\"1-lsb-release-command\"><a href=\"#1-lsb-release-command\" class=\"headerlink\" title=\"1. lsb_release command\"></a>1. <code>lsb_release</code> command</h3><p>The lsb_release command gives LSB (Linux Standard Base) and distribution-specific information on the CLI. The usage is:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ lsb_release -a</span><br></pre></td></tr></table></figure>\n<p>outputs something like:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">No LSB modules are available.</span><br><span class=\"line\">Distributor ID:\tUbuntu</span><br><span class=\"line\">Description:\tPop!_OS 18.10</span><br><span class=\"line\">Release:\t18.10</span><br><span class=\"line\">Codename:\tcosmic</span><br></pre></td></tr></table></figure>\n<p>As I chose the Ubuntu flavoured <a href=\"//system76.com/pop\">System76 Pop!_OS</a>, I do not have any LSB modules to be shown.</p>\n<h3 id=\"2-hostnamectl-command\"><a href=\"#2-hostnamectl-command\" class=\"headerlink\" title=\"2. hostnamectl command\"></a>2. <code>hostnamectl</code> command</h3><p>Use hostnamectl command to <strong>query and change</strong> the system hostname and related settings. Just type the following command to check OS name and Linux kernel version:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hostnamectl status</span><br></pre></td></tr></table></figure>\n<p>or just</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hostnamectl</span><br></pre></td></tr></table></figure>\n<p>outputs something like:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> Static hostname: pop-os</span><br><span class=\"line\">       Icon name: computer-laptop</span><br><span class=\"line\">         Chassis: laptop</span><br><span class=\"line\">      Machine ID: 828e0ab12c145d632919eeed5c6ae1a7</span><br><span class=\"line\">         Boot ID: f4b0a67a325a4aa8b1dfceee0a4aadcc</span><br><span class=\"line\">Operating System: Pop!_OS 18.10</span><br><span class=\"line\">          Kernel: Linux 4.18.0-16-generic</span><br><span class=\"line\">    Architecture: x86-64</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-uname-command\"><a href=\"#3-uname-command\" class=\"headerlink\" title=\"3. uname command\"></a>3. <code>uname</code> command</h3><p>Just print Linux kernel version, run:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ uname -r</span><br><span class=\"line\"></span><br><span class=\"line\">4.18.0-16-generic</span><br></pre></td></tr></table></figure>\n<p>to see all available options:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ uname -a</span><br><span class=\"line\"></span><br><span class=\"line\">Linux </span><br><span class=\"line\">pop-os </span><br><span class=\"line\">4.18.0-16-generic </span><br><span class=\"line\">#17pop0-Ubuntu </span><br><span class=\"line\">SMP </span><br><span class=\"line\">Fri Mar 8 17:52:57 UTC 2019 (last updated timestamp)</span><br><span class=\"line\">x86_64 x86_64 x86_64 GNU/Linux</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"Just-open-the-os-release-file\"><a href=\"#Just-open-the-os-release-file\" class=\"headerlink\" title=\"Just open the os-release file\"></a>Just open the os-release file</h2><p>It is nice to know to see the OS version installed in one’s linux machine. This might come in handy to check the version installed in a running docker container or other virtual machines.</p>\n<p>To check the OS version and configs, just run the following command:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cat /etc/os-release</span><br></pre></td></tr></table></figure>\n<p>This should output something like:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">NAME=&quot;Pop!_OS&quot;</span><br><span class=\"line\">VERSION=&quot;18.10&quot;</span><br><span class=\"line\">ID=ubuntu</span><br><span class=\"line\">ID_LIKE=debian</span><br><span class=\"line\">PRETTY_NAME=&quot;Pop!_OS 18.10&quot;</span><br><span class=\"line\">VERSION_ID=&quot;18.10&quot;</span><br><span class=\"line\">HOME_URL=&quot;https://system76.com/pop&quot;</span><br><span class=\"line\">SUPPORT_URL=&quot;http://support.system76.com&quot;</span><br><span class=\"line\">BUG_REPORT_URL=&quot;https://github.com/pop-os/pop/issues&quot;</span><br><span class=\"line\">PRIVACY_POLICY_URL=&quot;https://system76.com/privacy&quot;</span><br><span class=\"line\">VERSION_CODENAME=cosmic</span><br><span class=\"line\">UBUNTU_CODENAME=cosmic</span><br></pre></td></tr></table></figure>\n<p>Since I have a <a href=\"/2019/02/20/My-new-laptop-System76-Galago-Pro/\">System76 Galago Pro</a>, I see the above configuration.</p>\n<blockquote>\n<p>The information you see always depends on your machine’s manufacturer. However, the properties are same across linux distributions.</p>\n</blockquote>\n<h2 id=\"Others\"><a href=\"#Others\" class=\"headerlink\" title=\"Others:\"></a>Others:</h2><h3 id=\"1-lsb-release-command\"><a href=\"#1-lsb-release-command\" class=\"headerlink\" title=\"1. lsb_release command\"></a>1. <code>lsb_release</code> command</h3><p>The lsb_release command gives LSB (Linux Standard Base) and distribution-specific information on the CLI. The usage is:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ lsb_release -a</span><br></pre></td></tr></table></figure>\n<p>outputs something like:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">No LSB modules are available.</span><br><span class=\"line\">Distributor ID:\tUbuntu</span><br><span class=\"line\">Description:\tPop!_OS 18.10</span><br><span class=\"line\">Release:\t18.10</span><br><span class=\"line\">Codename:\tcosmic</span><br></pre></td></tr></table></figure>\n<p>As I chose the Ubuntu flavoured <a href=\"//system76.com/pop\">System76 Pop!_OS</a>, I do not have any LSB modules to be shown.</p>\n<h3 id=\"2-hostnamectl-command\"><a href=\"#2-hostnamectl-command\" class=\"headerlink\" title=\"2. hostnamectl command\"></a>2. <code>hostnamectl</code> command</h3><p>Use hostnamectl command to <strong>query and change</strong> the system hostname and related settings. Just type the following command to check OS name and Linux kernel version:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hostnamectl status</span><br></pre></td></tr></table></figure>\n<p>or just</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hostnamectl</span><br></pre></td></tr></table></figure>\n<p>outputs something like:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> Static hostname: pop-os</span><br><span class=\"line\">       Icon name: computer-laptop</span><br><span class=\"line\">         Chassis: laptop</span><br><span class=\"line\">      Machine ID: 828e0ab12c145d632919eeed5c6ae1a7</span><br><span class=\"line\">         Boot ID: f4b0a67a325a4aa8b1dfceee0a4aadcc</span><br><span class=\"line\">Operating System: Pop!_OS 18.10</span><br><span class=\"line\">          Kernel: Linux 4.18.0-16-generic</span><br><span class=\"line\">    Architecture: x86-64</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-uname-command\"><a href=\"#3-uname-command\" class=\"headerlink\" title=\"3. uname command\"></a>3. <code>uname</code> command</h3><p>Just print Linux kernel version, run:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ uname -r</span><br><span class=\"line\"></span><br><span class=\"line\">4.18.0-16-generic</span><br></pre></td></tr></table></figure>\n<p>to see all available options:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ uname -a</span><br><span class=\"line\"></span><br><span class=\"line\">Linux </span><br><span class=\"line\">pop-os </span><br><span class=\"line\">4.18.0-16-generic </span><br><span class=\"line\">#17pop0-Ubuntu </span><br><span class=\"line\">SMP </span><br><span class=\"line\">Fri Mar 8 17:52:57 UTC 2019 (last updated timestamp)</span><br><span class=\"line\">x86_64 x86_64 x86_64 GNU/Linux</span><br></pre></td></tr></table></figure>"},{"title":"Run Postgres as Docker container","date":"2019-03-17T12:13:03.000Z","icon":"fab fa-docker","_content":"\n## PotgreSQL -  An Introduction:\n\nPostgreSQL is a powerful, open source object-relational database system. It has more than **15 years of active development** and a proven architecture that has earned it a strong reputation for reliability, data integrity, and correctness.\n\nJust a quick overview for one should use the PostgreSQL:\n\n - PostgreSQL is developed by the PostgreSQL Global Development Group, a diverse group of multiple companies and individual contributors. \n\n - It’s free and open-source software. PostgreSQL is released under the PostgreSQL license, a liberal Open Source license, similar to the BSD or MIT licenses.\n\n - PostgreSQL is largely SQL compliant.\n\n - PostgreSQL tackles concurrency efficiently with its MVCC implementation, which achieves very high levels of concurrency.\n\n - PostgreSQL supports JSON and other NoSQL features like native XML support and key-value pairs with HSTORE. It also supports indexing JSON data for faster access.\n\n - PostgreSQL supports a wide variety of programing languages including: C/C++, Java, JavaScript, .Net, R, Perl, Python, Ruby, Tcl and others; it’s even possible to run user-supplied code in separate processes (i.e. running as background workers).\n\nHope this helps of your wonder why it is better than other DBs out there like MySQL.\n\nNow, Lets see how we can run it as docker container.\n\n## Pull the docker image.\n\n```\n   $ docker pull postgres\n```\n\nThis will pull the latest stable release of PostgreSQL with the following OS release:\n\n```\n    PRETTY_NAME=\"Debian GNU/Linux 9 (stretch)\"\n    NAME=\"Debian GNU/Linux\"\n    VERSION_ID=\"9\"\n    VERSION=\"9 (stretch)\"\n    ID=debian\n    HOME_URL=\"https://www.debian.org/\"\n    SUPPORT_URL=\"https://www.debian.org/support\"\n    BUG_REPORT_URL=\"https://bugs.debian.org/\"\n```\n\nwhich makes the image size to around **312 MB**.\n\n> Prefer [`alpine`](//hub.docker.com/_/postgres#image-variants) versions to reduce the image size to lesser than **30 MB**.\n\n```\n    $ docker search alpine-postgres\n```\n\nwill show you multiple alpine versions out there.\n\nOnce the necessary image has been downloaded, you can verify it using,\n\n```\n    $ docker images\n```\n\n## Create a volume directory\n\nVolumes are easy and encouraged way to mount the data generated and used by the containers.\n\nLet's create a local directory to mount as [volume](//docs.docker.com/storage/volumes/)\n\n```\n    $ mkdir -p $HOME/docker/volumes/postgres\n```\n\n> **Tip:** `-p` option creates the subdirectories if necessary.\n\n## Run Postgres as container\n\nWe can do multiple things (create/run/mount) all at once in the following:\n\n```\n    $ docker run --name ashkeys-docker \\\n        -e POSTGRES_PASSWORD=ashkeys \\\n        -d -p 5432:5432 \\\n        -v $HOME/docker/volumes/postgres:/var/lib/postgresql/data  ashkeys_db\n```\nWhat are we doing here:\n\n - `run`\n  creates and runs the newly created container with options in case specified.\n - `--name`\n  name of the container.\n - `-e`\n  Exposes environment variable `POSTGRES_PASSWORD` with `docker` as value. There are others too namely `POSTGRES_USER` and `POSTGRES_DB`. `POSTGRES_USER` sets the superuser name. If not provided, the superuser name defaults to postgres.\n - `-d`\n  Runs the container in detached mode. By default, docker attaches the container. It is common to run in detached mode like running it in the background.\n - `-p`\n  Bind port 5432 on `localhost` to port 5432 within the container.\n - `-v`\n  Mount $HOME/docker/volumes/postgres on the host machine to the container side volume path /var/lib/postgresql/data created inside the container. This ensures that postgres data persists even after the container is removed.\n - `ashkeys_db`\n  Last one is the database we want to create along with the docker run command.\n\n## Connecting to our newly created postgres database\n\nSince our localhost port 5432 is bound to postgres container port, we can directly run our CRUD operations to `localhost:5432`. Lets connect to the database.\n\n```\n    $ psql -h localhost -U postgres -d ashkeys_db\n```\n\n> You might have to install the `psql` as global dependencies using [`npm`](/2019/02/18/install-nodejs-and-npm-pop-os/).\n","source":"_posts/Run-Postgres-as-Docker-container-2019-03-17.md","raw":"---\ntitle: Run Postgres as Docker container\ndate: 2019-03-17 13:13:03\ntags: [Tutorial, Setup, Docker, Postgres]\nicon: fab fa-docker\n---\n\n## PotgreSQL -  An Introduction:\n\nPostgreSQL is a powerful, open source object-relational database system. It has more than **15 years of active development** and a proven architecture that has earned it a strong reputation for reliability, data integrity, and correctness.\n\nJust a quick overview for one should use the PostgreSQL:\n\n - PostgreSQL is developed by the PostgreSQL Global Development Group, a diverse group of multiple companies and individual contributors. \n\n - It’s free and open-source software. PostgreSQL is released under the PostgreSQL license, a liberal Open Source license, similar to the BSD or MIT licenses.\n\n - PostgreSQL is largely SQL compliant.\n\n - PostgreSQL tackles concurrency efficiently with its MVCC implementation, which achieves very high levels of concurrency.\n\n - PostgreSQL supports JSON and other NoSQL features like native XML support and key-value pairs with HSTORE. It also supports indexing JSON data for faster access.\n\n - PostgreSQL supports a wide variety of programing languages including: C/C++, Java, JavaScript, .Net, R, Perl, Python, Ruby, Tcl and others; it’s even possible to run user-supplied code in separate processes (i.e. running as background workers).\n\nHope this helps of your wonder why it is better than other DBs out there like MySQL.\n\nNow, Lets see how we can run it as docker container.\n\n## Pull the docker image.\n\n```\n   $ docker pull postgres\n```\n\nThis will pull the latest stable release of PostgreSQL with the following OS release:\n\n```\n    PRETTY_NAME=\"Debian GNU/Linux 9 (stretch)\"\n    NAME=\"Debian GNU/Linux\"\n    VERSION_ID=\"9\"\n    VERSION=\"9 (stretch)\"\n    ID=debian\n    HOME_URL=\"https://www.debian.org/\"\n    SUPPORT_URL=\"https://www.debian.org/support\"\n    BUG_REPORT_URL=\"https://bugs.debian.org/\"\n```\n\nwhich makes the image size to around **312 MB**.\n\n> Prefer [`alpine`](//hub.docker.com/_/postgres#image-variants) versions to reduce the image size to lesser than **30 MB**.\n\n```\n    $ docker search alpine-postgres\n```\n\nwill show you multiple alpine versions out there.\n\nOnce the necessary image has been downloaded, you can verify it using,\n\n```\n    $ docker images\n```\n\n## Create a volume directory\n\nVolumes are easy and encouraged way to mount the data generated and used by the containers.\n\nLet's create a local directory to mount as [volume](//docs.docker.com/storage/volumes/)\n\n```\n    $ mkdir -p $HOME/docker/volumes/postgres\n```\n\n> **Tip:** `-p` option creates the subdirectories if necessary.\n\n## Run Postgres as container\n\nWe can do multiple things (create/run/mount) all at once in the following:\n\n```\n    $ docker run --name ashkeys-docker \\\n        -e POSTGRES_PASSWORD=ashkeys \\\n        -d -p 5432:5432 \\\n        -v $HOME/docker/volumes/postgres:/var/lib/postgresql/data  ashkeys_db\n```\nWhat are we doing here:\n\n - `run`\n  creates and runs the newly created container with options in case specified.\n - `--name`\n  name of the container.\n - `-e`\n  Exposes environment variable `POSTGRES_PASSWORD` with `docker` as value. There are others too namely `POSTGRES_USER` and `POSTGRES_DB`. `POSTGRES_USER` sets the superuser name. If not provided, the superuser name defaults to postgres.\n - `-d`\n  Runs the container in detached mode. By default, docker attaches the container. It is common to run in detached mode like running it in the background.\n - `-p`\n  Bind port 5432 on `localhost` to port 5432 within the container.\n - `-v`\n  Mount $HOME/docker/volumes/postgres on the host machine to the container side volume path /var/lib/postgresql/data created inside the container. This ensures that postgres data persists even after the container is removed.\n - `ashkeys_db`\n  Last one is the database we want to create along with the docker run command.\n\n## Connecting to our newly created postgres database\n\nSince our localhost port 5432 is bound to postgres container port, we can directly run our CRUD operations to `localhost:5432`. Lets connect to the database.\n\n```\n    $ psql -h localhost -U postgres -d ashkeys_db\n```\n\n> You might have to install the `psql` as global dependencies using [`npm`](/2019/02/18/install-nodejs-and-npm-pop-os/).\n","slug":"Run-Postgres-as-Docker-container","published":1,"updated":"2019-03-17T17:23:07.735Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjtd799vj0007xvi0ia2544sq","content":"<h2 id=\"PotgreSQL-An-Introduction\"><a href=\"#PotgreSQL-An-Introduction\" class=\"headerlink\" title=\"PotgreSQL -  An Introduction:\"></a>PotgreSQL -  An Introduction:</h2><p>PostgreSQL is a powerful, open source object-relational database system. It has more than <strong>15 years of active development</strong> and a proven architecture that has earned it a strong reputation for reliability, data integrity, and correctness.</p>\n<p>Just a quick overview for one should use the PostgreSQL:</p>\n<ul>\n<li><p>PostgreSQL is developed by the PostgreSQL Global Development Group, a diverse group of multiple companies and individual contributors. </p>\n</li>\n<li><p>It’s free and open-source software. PostgreSQL is released under the PostgreSQL license, a liberal Open Source license, similar to the BSD or MIT licenses.</p>\n</li>\n<li><p>PostgreSQL is largely SQL compliant.</p>\n</li>\n<li><p>PostgreSQL tackles concurrency efficiently with its MVCC implementation, which achieves very high levels of concurrency.</p>\n</li>\n<li><p>PostgreSQL supports JSON and other NoSQL features like native XML support and key-value pairs with HSTORE. It also supports indexing JSON data for faster access.</p>\n</li>\n<li><p>PostgreSQL supports a wide variety of programing languages including: C/C++, Java, JavaScript, .Net, R, Perl, Python, Ruby, Tcl and others; it’s even possible to run user-supplied code in separate processes (i.e. running as background workers).</p>\n</li>\n</ul>\n<p>Hope this helps of your wonder why it is better than other DBs out there like MySQL.</p>\n<p>Now, Lets see how we can run it as docker container.</p>\n<h2 id=\"Pull-the-docker-image\"><a href=\"#Pull-the-docker-image\" class=\"headerlink\" title=\"Pull the docker image.\"></a>Pull the docker image.</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ docker pull postgres</span><br></pre></td></tr></table></figure>\n<p>This will pull the latest stable release of PostgreSQL with the following OS release:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">PRETTY_NAME=&quot;Debian GNU/Linux 9 (stretch)&quot;</span><br><span class=\"line\">NAME=&quot;Debian GNU/Linux&quot;</span><br><span class=\"line\">VERSION_ID=&quot;9&quot;</span><br><span class=\"line\">VERSION=&quot;9 (stretch)&quot;</span><br><span class=\"line\">ID=debian</span><br><span class=\"line\">HOME_URL=&quot;https://www.debian.org/&quot;</span><br><span class=\"line\">SUPPORT_URL=&quot;https://www.debian.org/support&quot;</span><br><span class=\"line\">BUG_REPORT_URL=&quot;https://bugs.debian.org/&quot;</span><br></pre></td></tr></table></figure>\n<p>which makes the image size to around <strong>312 MB</strong>.</p>\n<blockquote>\n<p>Prefer <a href=\"//hub.docker.com/_/postgres#image-variants\"><code>alpine</code></a> versions to reduce the image size to lesser than <strong>30 MB</strong>.</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ docker search alpine-postgres</span><br></pre></td></tr></table></figure>\n<p>will show you multiple alpine versions out there.</p>\n<p>Once the necessary image has been downloaded, you can verify it using,</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ docker images</span><br></pre></td></tr></table></figure>\n<h2 id=\"Create-a-volume-directory\"><a href=\"#Create-a-volume-directory\" class=\"headerlink\" title=\"Create a volume directory\"></a>Create a volume directory</h2><p>Volumes are easy and encouraged way to mount the data generated and used by the containers.</p>\n<p>Let’s create a local directory to mount as <a href=\"//docs.docker.com/storage/volumes/\">volume</a></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ mkdir -p $HOME/docker/volumes/postgres</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p><strong>Tip:</strong> <code>-p</code> option creates the subdirectories if necessary.</p>\n</blockquote>\n<h2 id=\"Run-Postgres-as-container\"><a href=\"#Run-Postgres-as-container\" class=\"headerlink\" title=\"Run Postgres as container\"></a>Run Postgres as container</h2><p>We can do multiple things (create/run/mount) all at once in the following:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ docker run --name ashkeys-docker \\</span><br><span class=\"line\">    -e POSTGRES_PASSWORD=ashkeys \\</span><br><span class=\"line\">    -d -p 5432:5432 \\</span><br><span class=\"line\">    -v $HOME/docker/volumes/postgres:/var/lib/postgresql/data  ashkeys_db</span><br></pre></td></tr></table></figure>\n<p>What are we doing here:</p>\n<ul>\n<li><code>run</code><br>creates and runs the newly created container with options in case specified.</li>\n<li><code>--name</code><br>name of the container.</li>\n<li><code>-e</code><br>Exposes environment variable <code>POSTGRES_PASSWORD</code> with <code>docker</code> as value. There are others too namely <code>POSTGRES_USER</code> and <code>POSTGRES_DB</code>. <code>POSTGRES_USER</code> sets the superuser name. If not provided, the superuser name defaults to postgres.</li>\n<li><code>-d</code><br>Runs the container in detached mode. By default, docker attaches the container. It is common to run in detached mode like running it in the background.</li>\n<li><code>-p</code><br>Bind port 5432 on <code>localhost</code> to port 5432 within the container.</li>\n<li><code>-v</code><br>Mount $HOME/docker/volumes/postgres on the host machine to the container side volume path /var/lib/postgresql/data created inside the container. This ensures that postgres data persists even after the container is removed.</li>\n<li><code>ashkeys_db</code><br>Last one is the database we want to create along with the docker run command.</li>\n</ul>\n<h2 id=\"Connecting-to-our-newly-created-postgres-database\"><a href=\"#Connecting-to-our-newly-created-postgres-database\" class=\"headerlink\" title=\"Connecting to our newly created postgres database\"></a>Connecting to our newly created postgres database</h2><p>Since our localhost port 5432 is bound to postgres container port, we can directly run our CRUD operations to <code>localhost:5432</code>. Lets connect to the database.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ psql -h localhost -U postgres -d ashkeys_db</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>You might have to install the <code>psql</code> as global dependencies using <a href=\"/2019/02/18/install-nodejs-and-npm-pop-os/\"><code>npm</code></a>.</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"PotgreSQL-An-Introduction\"><a href=\"#PotgreSQL-An-Introduction\" class=\"headerlink\" title=\"PotgreSQL -  An Introduction:\"></a>PotgreSQL -  An Introduction:</h2><p>PostgreSQL is a powerful, open source object-relational database system. It has more than <strong>15 years of active development</strong> and a proven architecture that has earned it a strong reputation for reliability, data integrity, and correctness.</p>\n<p>Just a quick overview for one should use the PostgreSQL:</p>\n<ul>\n<li><p>PostgreSQL is developed by the PostgreSQL Global Development Group, a diverse group of multiple companies and individual contributors. </p>\n</li>\n<li><p>It’s free and open-source software. PostgreSQL is released under the PostgreSQL license, a liberal Open Source license, similar to the BSD or MIT licenses.</p>\n</li>\n<li><p>PostgreSQL is largely SQL compliant.</p>\n</li>\n<li><p>PostgreSQL tackles concurrency efficiently with its MVCC implementation, which achieves very high levels of concurrency.</p>\n</li>\n<li><p>PostgreSQL supports JSON and other NoSQL features like native XML support and key-value pairs with HSTORE. It also supports indexing JSON data for faster access.</p>\n</li>\n<li><p>PostgreSQL supports a wide variety of programing languages including: C/C++, Java, JavaScript, .Net, R, Perl, Python, Ruby, Tcl and others; it’s even possible to run user-supplied code in separate processes (i.e. running as background workers).</p>\n</li>\n</ul>\n<p>Hope this helps of your wonder why it is better than other DBs out there like MySQL.</p>\n<p>Now, Lets see how we can run it as docker container.</p>\n<h2 id=\"Pull-the-docker-image\"><a href=\"#Pull-the-docker-image\" class=\"headerlink\" title=\"Pull the docker image.\"></a>Pull the docker image.</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ docker pull postgres</span><br></pre></td></tr></table></figure>\n<p>This will pull the latest stable release of PostgreSQL with the following OS release:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">PRETTY_NAME=&quot;Debian GNU/Linux 9 (stretch)&quot;</span><br><span class=\"line\">NAME=&quot;Debian GNU/Linux&quot;</span><br><span class=\"line\">VERSION_ID=&quot;9&quot;</span><br><span class=\"line\">VERSION=&quot;9 (stretch)&quot;</span><br><span class=\"line\">ID=debian</span><br><span class=\"line\">HOME_URL=&quot;https://www.debian.org/&quot;</span><br><span class=\"line\">SUPPORT_URL=&quot;https://www.debian.org/support&quot;</span><br><span class=\"line\">BUG_REPORT_URL=&quot;https://bugs.debian.org/&quot;</span><br></pre></td></tr></table></figure>\n<p>which makes the image size to around <strong>312 MB</strong>.</p>\n<blockquote>\n<p>Prefer <a href=\"//hub.docker.com/_/postgres#image-variants\"><code>alpine</code></a> versions to reduce the image size to lesser than <strong>30 MB</strong>.</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ docker search alpine-postgres</span><br></pre></td></tr></table></figure>\n<p>will show you multiple alpine versions out there.</p>\n<p>Once the necessary image has been downloaded, you can verify it using,</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ docker images</span><br></pre></td></tr></table></figure>\n<h2 id=\"Create-a-volume-directory\"><a href=\"#Create-a-volume-directory\" class=\"headerlink\" title=\"Create a volume directory\"></a>Create a volume directory</h2><p>Volumes are easy and encouraged way to mount the data generated and used by the containers.</p>\n<p>Let’s create a local directory to mount as <a href=\"//docs.docker.com/storage/volumes/\">volume</a></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ mkdir -p $HOME/docker/volumes/postgres</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p><strong>Tip:</strong> <code>-p</code> option creates the subdirectories if necessary.</p>\n</blockquote>\n<h2 id=\"Run-Postgres-as-container\"><a href=\"#Run-Postgres-as-container\" class=\"headerlink\" title=\"Run Postgres as container\"></a>Run Postgres as container</h2><p>We can do multiple things (create/run/mount) all at once in the following:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ docker run --name ashkeys-docker \\</span><br><span class=\"line\">    -e POSTGRES_PASSWORD=ashkeys \\</span><br><span class=\"line\">    -d -p 5432:5432 \\</span><br><span class=\"line\">    -v $HOME/docker/volumes/postgres:/var/lib/postgresql/data  ashkeys_db</span><br></pre></td></tr></table></figure>\n<p>What are we doing here:</p>\n<ul>\n<li><code>run</code><br>creates and runs the newly created container with options in case specified.</li>\n<li><code>--name</code><br>name of the container.</li>\n<li><code>-e</code><br>Exposes environment variable <code>POSTGRES_PASSWORD</code> with <code>docker</code> as value. There are others too namely <code>POSTGRES_USER</code> and <code>POSTGRES_DB</code>. <code>POSTGRES_USER</code> sets the superuser name. If not provided, the superuser name defaults to postgres.</li>\n<li><code>-d</code><br>Runs the container in detached mode. By default, docker attaches the container. It is common to run in detached mode like running it in the background.</li>\n<li><code>-p</code><br>Bind port 5432 on <code>localhost</code> to port 5432 within the container.</li>\n<li><code>-v</code><br>Mount $HOME/docker/volumes/postgres on the host machine to the container side volume path /var/lib/postgresql/data created inside the container. This ensures that postgres data persists even after the container is removed.</li>\n<li><code>ashkeys_db</code><br>Last one is the database we want to create along with the docker run command.</li>\n</ul>\n<h2 id=\"Connecting-to-our-newly-created-postgres-database\"><a href=\"#Connecting-to-our-newly-created-postgres-database\" class=\"headerlink\" title=\"Connecting to our newly created postgres database\"></a>Connecting to our newly created postgres database</h2><p>Since our localhost port 5432 is bound to postgres container port, we can directly run our CRUD operations to <code>localhost:5432</code>. Lets connect to the database.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ psql -h localhost -U postgres -d ashkeys_db</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>You might have to install the <code>psql</code> as global dependencies using <a href=\"/2019/02/18/install-nodejs-and-npm-pop-os/\"><code>npm</code></a>.</p>\n</blockquote>\n"},{"title":"Hexo deploy: Fatal: in unpopulated submodule `.deploy_git`","date":"2019-02-18T18:22:23.000Z","icon":"fab fa-blogger-b","_content":"\nToday, I checked out the hexo blog in my new laptop. It threw a fatal error when I tried to `hexo deploy` it. After trial and error for sometime, I found the quick and easy solution like *Try turning it off and on again!*\n\nFirst install the relevant dependencies: (I do deployment to `git`)\n\n```\n    $ npm install hexo-deployer-git --save\n```\n\nHere comes the universal solution:\n\n```\n    $ rm -rf .deploy_git\n    $ hexo g\n    $ hexo d\n```\n\n> Make sure you do not version the `.deploy_git` folder as it is specific to local environment and setup.\n","source":"_posts/hexo-fatal-in-unpopulated-submodule-deploy-git-2019-02-18.md","raw":"---\ntitle: 'Hexo deploy: Fatal: in unpopulated submodule `.deploy_git`'\ndate: 2019-02-18 19:22:23\ntags: [Blog, Setup, Hexo]\nicon: fab fa-blogger-b\n---\n\nToday, I checked out the hexo blog in my new laptop. It threw a fatal error when I tried to `hexo deploy` it. After trial and error for sometime, I found the quick and easy solution like *Try turning it off and on again!*\n\nFirst install the relevant dependencies: (I do deployment to `git`)\n\n```\n    $ npm install hexo-deployer-git --save\n```\n\nHere comes the universal solution:\n\n```\n    $ rm -rf .deploy_git\n    $ hexo g\n    $ hexo d\n```\n\n> Make sure you do not version the `.deploy_git` folder as it is specific to local environment and setup.\n","slug":"hexo-fatal-in-unpopulated-submodule-deploy-git","published":1,"updated":"2019-03-17T15:09:28.495Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjtd799vl0009xvi0ykgeibgn","content":"<p>Today, I checked out the hexo blog in my new laptop. It threw a fatal error when I tried to <code>hexo deploy</code> it. After trial and error for sometime, I found the quick and easy solution like <em>Try turning it off and on again!</em></p>\n<p>First install the relevant dependencies: (I do deployment to <code>git</code>)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n<p>Here comes the universal solution:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ rm -rf .deploy_git</span><br><span class=\"line\">$ hexo g</span><br><span class=\"line\">$ hexo d</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>Make sure you do not version the <code>.deploy_git</code> folder as it is specific to local environment and setup.</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<p>Today, I checked out the hexo blog in my new laptop. It threw a fatal error when I tried to <code>hexo deploy</code> it. After trial and error for sometime, I found the quick and easy solution like <em>Try turning it off and on again!</em></p>\n<p>First install the relevant dependencies: (I do deployment to <code>git</code>)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n<p>Here comes the universal solution:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ rm -rf .deploy_git</span><br><span class=\"line\">$ hexo g</span><br><span class=\"line\">$ hexo d</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>Make sure you do not version the <code>.deploy_git</code> folder as it is specific to local environment and setup.</p>\n</blockquote>\n"},{"title":"Install nodejs and npm in Pop!_OS","date":"2019-02-18T16:35:13.000Z","icon":"fab fa-node fa-npm","_content":"\nStart by updating the packages list by typing:\n\n```\n    $ sudo apt update\n```\n\nInstall `nodejs` using the `apt` package manager:\n\n```\n    $ sudo apt install nodejs npm\n```\n\nThe Node.js executable from the Ubuntu repositories is named `nodejs` instead of node because of a conflict with another package.\n\nTo launch the [REPL Terminal](//www.tutorialspoint.com/nodejs/nodejs_repl_terminal.htm): (Pressing `Ctrl + C` twice exits!)\n\n```\n    $ nodejs\n```\n\nTo verify the installation execute the following command:\n\n```\n    $ node -v && npm -v \n```","source":"_posts/install-nodejs-and-npm-pop-os-2019-02-18.md","raw":"---\ntitle: Install nodejs and npm in Pop!_OS\ndate: 2019-02-18 17:35:13\ntags: [Tutorial, Setup, Pop!_OS, nodejs, npm]\nicon: fab fa-node fa-npm\n---\n\nStart by updating the packages list by typing:\n\n```\n    $ sudo apt update\n```\n\nInstall `nodejs` using the `apt` package manager:\n\n```\n    $ sudo apt install nodejs npm\n```\n\nThe Node.js executable from the Ubuntu repositories is named `nodejs` instead of node because of a conflict with another package.\n\nTo launch the [REPL Terminal](//www.tutorialspoint.com/nodejs/nodejs_repl_terminal.htm): (Pressing `Ctrl + C` twice exits!)\n\n```\n    $ nodejs\n```\n\nTo verify the installation execute the following command:\n\n```\n    $ node -v && npm -v \n```","slug":"install-nodejs-and-npm-pop-os","published":1,"updated":"2019-03-17T15:07:58.682Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjtd799vm000axvi0o4npf4h7","content":"<p>Start by updating the packages list by typing:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo apt update</span><br></pre></td></tr></table></figure>\n<p>Install <code>nodejs</code> using the <code>apt</code> package manager:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo apt install nodejs npm</span><br></pre></td></tr></table></figure>\n<p>The Node.js executable from the Ubuntu repositories is named <code>nodejs</code> instead of node because of a conflict with another package.</p>\n<p>To launch the <a href=\"//www.tutorialspoint.com/nodejs/nodejs_repl_terminal.htm\">REPL Terminal</a>: (Pressing <code>Ctrl + C</code> twice exits!)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ nodejs</span><br></pre></td></tr></table></figure>\n<p>To verify the installation execute the following command:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ node -v &amp;&amp; npm -v</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p>Start by updating the packages list by typing:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo apt update</span><br></pre></td></tr></table></figure>\n<p>Install <code>nodejs</code> using the <code>apt</code> package manager:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo apt install nodejs npm</span><br></pre></td></tr></table></figure>\n<p>The Node.js executable from the Ubuntu repositories is named <code>nodejs</code> instead of node because of a conflict with another package.</p>\n<p>To launch the <a href=\"//www.tutorialspoint.com/nodejs/nodejs_repl_terminal.htm\">REPL Terminal</a>: (Pressing <code>Ctrl + C</code> twice exits!)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ nodejs</span><br></pre></td></tr></table></figure>\n<p>To verify the installation execute the following command:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ node -v &amp;&amp; npm -v</span><br></pre></td></tr></table></figure>"},{"title":"Weekend ride to Weert","date":"2019-02-17T20:52:57.000Z","icon":"fas fa-journal-whills","_content":"\nToday afternoon, I had time to take my Shukuchi out for a ride. It was a warm weather. It does look like we got a short-break from winter. I took motorways until Eindhovan to skip the seen places. As planned from there, I took windy roads to reach Limburg, Belgium. Since it is winter time, it was getting dark soon. I had another hour and a half ride when it was 4 o'clock. I had to give up and turn back home from a near border village called Weert. I really like the village Weert and the individual houses with car port and garages. I remembered the plan that I had initially to buy an individual house with garden and car port or shed for my Shukuchi. So that it will be a workshop afterwards for I have the Shukuchi maintanance. However, I had to settle for an apartment last year. I might buy a new one by selling this apartment later once I have a partner to increase the mortgage budget. Hold that thought!\n\n> We do worry about the things we did not have or do. As an aquitance of mine once said, *I do not like the could have or should have. Because it never happens*.\n\nI rode back home real fast clocking 100Kmph as average on the motorways. It was nice ride overall even though I did not reach my destination as planned.\n\n> So I recalled the saying, *it is the journey that matters!*\n","source":"_posts/log-2019-02-17.md","raw":"---\ntitle: Weekend ride to Weert\ntags: [Journal, Shukuchi]\ndate: 2019-02-17 21:52:57\nicon: fas fa-journal-whills\n---\n\nToday afternoon, I had time to take my Shukuchi out for a ride. It was a warm weather. It does look like we got a short-break from winter. I took motorways until Eindhovan to skip the seen places. As planned from there, I took windy roads to reach Limburg, Belgium. Since it is winter time, it was getting dark soon. I had another hour and a half ride when it was 4 o'clock. I had to give up and turn back home from a near border village called Weert. I really like the village Weert and the individual houses with car port and garages. I remembered the plan that I had initially to buy an individual house with garden and car port or shed for my Shukuchi. So that it will be a workshop afterwards for I have the Shukuchi maintanance. However, I had to settle for an apartment last year. I might buy a new one by selling this apartment later once I have a partner to increase the mortgage budget. Hold that thought!\n\n> We do worry about the things we did not have or do. As an aquitance of mine once said, *I do not like the could have or should have. Because it never happens*.\n\nI rode back home real fast clocking 100Kmph as average on the motorways. It was nice ride overall even though I did not reach my destination as planned.\n\n> So I recalled the saying, *it is the journey that matters!*\n","slug":"log","published":1,"updated":"2019-03-17T15:09:03.511Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjtd799vq000cxvi0mu820598","content":"<p>Today afternoon, I had time to take my Shukuchi out for a ride. It was a warm weather. It does look like we got a short-break from winter. I took motorways until Eindhovan to skip the seen places. As planned from there, I took windy roads to reach Limburg, Belgium. Since it is winter time, it was getting dark soon. I had another hour and a half ride when it was 4 o’clock. I had to give up and turn back home from a near border village called Weert. I really like the village Weert and the individual houses with car port and garages. I remembered the plan that I had initially to buy an individual house with garden and car port or shed for my Shukuchi. So that it will be a workshop afterwards for I have the Shukuchi maintanance. However, I had to settle for an apartment last year. I might buy a new one by selling this apartment later once I have a partner to increase the mortgage budget. Hold that thought!</p>\n<blockquote>\n<p>We do worry about the things we did not have or do. As an aquitance of mine once said, <em>I do not like the could have or should have. Because it never happens</em>.</p>\n</blockquote>\n<p>I rode back home real fast clocking 100Kmph as average on the motorways. It was nice ride overall even though I did not reach my destination as planned.</p>\n<blockquote>\n<p>So I recalled the saying, <em>it is the journey that matters!</em></p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<p>Today afternoon, I had time to take my Shukuchi out for a ride. It was a warm weather. It does look like we got a short-break from winter. I took motorways until Eindhovan to skip the seen places. As planned from there, I took windy roads to reach Limburg, Belgium. Since it is winter time, it was getting dark soon. I had another hour and a half ride when it was 4 o’clock. I had to give up and turn back home from a near border village called Weert. I really like the village Weert and the individual houses with car port and garages. I remembered the plan that I had initially to buy an individual house with garden and car port or shed for my Shukuchi. So that it will be a workshop afterwards for I have the Shukuchi maintanance. However, I had to settle for an apartment last year. I might buy a new one by selling this apartment later once I have a partner to increase the mortgage budget. Hold that thought!</p>\n<blockquote>\n<p>We do worry about the things we did not have or do. As an aquitance of mine once said, <em>I do not like the could have or should have. Because it never happens</em>.</p>\n</blockquote>\n<p>I rode back home real fast clocking 100Kmph as average on the motorways. It was nice ride overall even though I did not reach my destination as planned.</p>\n<blockquote>\n<p>So I recalled the saying, <em>it is the journey that matters!</em></p>\n</blockquote>\n"}],"PostAsset":[{"_id":"source/_posts/My-new-laptop-System76-Galago-Pro-2019-02-22/system_76_first_look.jpg","slug":"system_76_first_look.jpg","post":"cjtd799vg0005xvi0wawu77e7","modified":1,"renderable":0},{"_id":"source/_posts/My-new-laptop-System76-Galago-Pro-2019-02-22/system_76_gift_card.jpg","slug":"system_76_gift_card.jpg","post":"cjtd799vg0005xvi0wawu77e7","modified":1,"renderable":0},{"_id":"source/_posts/My-new-laptop-System76-Galago-Pro-2019-02-22/system_76_installation.jpg","slug":"system_76_installation.jpg","post":"cjtd799vg0005xvi0wawu77e7","modified":1,"renderable":0},{"_id":"source/_posts/My-new-laptop-System76-Galago-Pro-2019-02-22/system_76_reusable_package.jpg","slug":"system_76_reusable_package.jpg","post":"cjtd799vg0005xvi0wawu77e7","modified":1,"renderable":0},{"_id":"source/_posts/My-new-laptop-System76-Galago-Pro-2019-02-22/system_76_settings_configuration.jpg","slug":"system_76_settings_configuration.jpg","post":"cjtd799vg0005xvi0wawu77e7","modified":1,"renderable":0},{"_id":"source/_posts/My-new-laptop-System76-Galago-Pro-2019-02-22/system_76_unleash_your_potential.jpg","slug":"system_76_unleash_your_potential.jpg","post":"cjtd799vg0005xvi0wawu77e7","modified":1,"renderable":0}],"PostCategory":[],"PostTag":[{"post_id":"cjtd799v60000xvi0hu5xk8nw","tag_id":"cjtd799ve0004xvi0o8o862z8","_id":"cjtd799vu000fxvi0so6o29sg"},{"post_id":"cjtd799v60000xvi0hu5xk8nw","tag_id":"cjtd799vk0008xvi0q22we75n","_id":"cjtd799vu000gxvi0xmzlgc30"},{"post_id":"cjtd799v60000xvi0hu5xk8nw","tag_id":"cjtd799vn000bxvi03y68mvqk","_id":"cjtd799vv000ixvi0yxcxo6lt"},{"post_id":"cjtd799v60000xvi0hu5xk8nw","tag_id":"cjtd799vt000dxvi0iymvjbvu","_id":"cjtd799vv000jxvi0lx1x7zsd"},{"post_id":"cjtd799vb0002xvi0fpt8hhui","tag_id":"cjtd799ve0004xvi0o8o862z8","_id":"cjtd799vw000nxvi0mdofykzm"},{"post_id":"cjtd799vb0002xvi0fpt8hhui","tag_id":"cjtd799vk0008xvi0q22we75n","_id":"cjtd799vw000oxvi0qb7auqqq"},{"post_id":"cjtd799vb0002xvi0fpt8hhui","tag_id":"cjtd799vn000bxvi03y68mvqk","_id":"cjtd799vx000qxvi0mac4txo1"},{"post_id":"cjtd799vb0002xvi0fpt8hhui","tag_id":"cjtd799vt000dxvi0iymvjbvu","_id":"cjtd799vx000rxvi0ktvu8b23"},{"post_id":"cjtd799vg0005xvi0wawu77e7","tag_id":"cjtd799ve0004xvi0o8o862z8","_id":"cjtd799vx000txvi0g9tfjvze"},{"post_id":"cjtd799vg0005xvi0wawu77e7","tag_id":"cjtd799vn000bxvi03y68mvqk","_id":"cjtd799vx000uxvi0qx7elxei"},{"post_id":"cjtd799vi0006xvi0bu3fuhi6","tag_id":"cjtd799ve0004xvi0o8o862z8","_id":"cjtd799vy000yxvi04nehk3ua"},{"post_id":"cjtd799vi0006xvi0bu3fuhi6","tag_id":"cjtd799vk0008xvi0q22we75n","_id":"cjtd799vz000zxvi09hpm5mz4"},{"post_id":"cjtd799vi0006xvi0bu3fuhi6","tag_id":"cjtd799vn000bxvi03y68mvqk","_id":"cjtd799vz0011xvi04rf7fdzs"},{"post_id":"cjtd799vi0006xvi0bu3fuhi6","tag_id":"cjtd799vt000dxvi0iymvjbvu","_id":"cjtd799vz0012xvi0hpjl6kgz"},{"post_id":"cjtd799vj0007xvi0ia2544sq","tag_id":"cjtd799vy000xxvi0ur9584yv","_id":"cjtd799w00016xvi0b2dk152q"},{"post_id":"cjtd799vj0007xvi0ia2544sq","tag_id":"cjtd799vz0010xvi0vz60mfmm","_id":"cjtd799w00017xvi03hhhjrkc"},{"post_id":"cjtd799vj0007xvi0ia2544sq","tag_id":"cjtd799vz0013xvi0yzn0jrvi","_id":"cjtd799w00019xvi0nzf8wopc"},{"post_id":"cjtd799vj0007xvi0ia2544sq","tag_id":"cjtd799vz0014xvi0jme67dou","_id":"cjtd799w0001axvi03wbvyoxk"},{"post_id":"cjtd799vl0009xvi0ykgeibgn","tag_id":"cjtd799ve0004xvi0o8o862z8","_id":"cjtd799w1001cxvi09q9qr31x"},{"post_id":"cjtd799vl0009xvi0ykgeibgn","tag_id":"cjtd799vz0010xvi0vz60mfmm","_id":"cjtd799w1001dxvi03m13q7mx"},{"post_id":"cjtd799vl0009xvi0ykgeibgn","tag_id":"cjtd799w00018xvi0u4tddh9a","_id":"cjtd799w1001fxvi05noyv4h5"},{"post_id":"cjtd799vm000axvi0o4npf4h7","tag_id":"cjtd799vy000xxvi0ur9584yv","_id":"cjtd799w2001kxvi04hr3fiqo"},{"post_id":"cjtd799vm000axvi0o4npf4h7","tag_id":"cjtd799vz0010xvi0vz60mfmm","_id":"cjtd799w3001lxvi0js1rylr1"},{"post_id":"cjtd799vm000axvi0o4npf4h7","tag_id":"cjtd799vn000bxvi03y68mvqk","_id":"cjtd799w3001nxvi08bzwkxw2"},{"post_id":"cjtd799vm000axvi0o4npf4h7","tag_id":"cjtd799w2001hxvi0m6fwia2s","_id":"cjtd799w3001oxvi0r74j2lvz"},{"post_id":"cjtd799vm000axvi0o4npf4h7","tag_id":"cjtd799w2001ixvi0i04hoy9a","_id":"cjtd799w3001pxvi0fc1xnqwq"},{"post_id":"cjtd799vq000cxvi0mu820598","tag_id":"cjtd799w2001jxvi0j2hjo5lu","_id":"cjtd799w3001qxvi0sxamc7sf"},{"post_id":"cjtd799vq000cxvi0mu820598","tag_id":"cjtd799w3001mxvi0n2oppv7u","_id":"cjtd799w3001rxvi036kzcep6"}],"Tag":[{"name":"Blog","_id":"cjtd799ve0004xvi0o8o862z8"},{"name":"Linux","_id":"cjtd799vk0008xvi0q22we75n"},{"name":"Pop!_OS","_id":"cjtd799vn000bxvi03y68mvqk"},{"name":"Terminal Usage","_id":"cjtd799vt000dxvi0iymvjbvu"},{"name":"Tutorial","_id":"cjtd799vy000xxvi0ur9584yv"},{"name":"Setup","_id":"cjtd799vz0010xvi0vz60mfmm"},{"name":"Docker","_id":"cjtd799vz0013xvi0yzn0jrvi"},{"name":"Postgres","_id":"cjtd799vz0014xvi0jme67dou"},{"name":"Hexo","_id":"cjtd799w00018xvi0u4tddh9a"},{"name":"nodejs","_id":"cjtd799w2001hxvi0m6fwia2s"},{"name":"npm","_id":"cjtd799w2001ixvi0i04hoy9a"},{"name":"Journal","_id":"cjtd799w2001jxvi0j2hjo5lu"},{"name":"Shukuchi","_id":"cjtd799w3001mxvi0n2oppv7u"}]}}